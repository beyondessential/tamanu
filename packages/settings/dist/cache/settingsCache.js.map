{"version":3,"sources":["../../src/cache/settingsCache.ts"],"sourcesContent":["class SettingsCache {\n  cache: any | null = null;\n\n  expirationTimestamp: number | null = null;\n\n  // TTL in milliseconds\n  ttl = 60000;\n\n  get() {\n    // If cache is expired, reset it.\n    if (!this.isValid()) {\n      this.reset();\n    }\n\n    return this.cache;\n  }\n\n  set(value: any) {\n    this.cache = value;\n    // Calculate expiration timestamp based on ttl\n    this.expirationTimestamp = Date.now() + this.ttl;\n  }\n\n  reset() {\n    this.cache = null;\n    this.expirationTimestamp = null;\n  }\n\n  isValid() {\n    return this.expirationTimestamp && Date.now() < this.expirationTimestamp;\n  }\n}\n\nexport const settingsCache = new SettingsCache();\n"],"names":["settingsCache","SettingsCache","get","isValid","reset","cache","set","value","expirationTimestamp","Date","now","ttl"],"mappings":";;;;+BAiCaA;;aAAAA;;AAjCb,IAAA,AAAMC,gBAAN,MAAMA;IAQJC,MAAM;QACJ,iCAAiC;QACjC,IAAI,CAAC,IAAI,CAACC,OAAO,IAAI;YACnB,IAAI,CAACC,KAAK;QACZ,CAAC;QAED,OAAO,IAAI,CAACC,KAAK;IACnB;IAEAC,IAAIC,KAAU,EAAE;QACd,IAAI,CAACF,KAAK,GAAGE;QACb,8CAA8C;QAC9C,IAAI,CAACC,mBAAmB,GAAGC,KAAKC,GAAG,KAAK,IAAI,CAACC,GAAG;IAClD;IAEAP,QAAQ;QACN,IAAI,CAACC,KAAK,GAAG,IAAI;QACjB,IAAI,CAACG,mBAAmB,GAAG,IAAI;IACjC;IAEAL,UAAU;QACR,OAAO,IAAI,CAACK,mBAAmB,IAAIC,KAAKC,GAAG,KAAK,IAAI,CAACF,mBAAmB;IAC1E;;aA7BAH,QAAoB,IAAI;aAExBG,sBAAqC,IAAI;QAEzC,sBAAsB;aACtBG,MAAM;;AAyBR;AAEO,MAAMX,gBAAgB,IAAIC"}