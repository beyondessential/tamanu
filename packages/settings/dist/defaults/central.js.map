{"version":3,"sources":["../../src/defaults/central.ts"],"sourcesContent":["export const centralDefaults = {\n  allowMismatchedTimeZones: false,\n  cors: {\n    allowedOrigin: '',\n  },\n  countryTimeZone: 'Australia/Melbourne',\n  disk: {\n    diskPath: 'C:/',\n    freeSpaceRequired: {\n      gigabytesForUploadingDocuments: 16,\n    },\n  },\n  export: {\n    maxFileSizeInMB: 50,\n  },\n  hl7: {\n    assigners: {\n      patientDisplayId: 'Tamanu',\n      patientDrivingLicense: 'RTA',\n      patientPassport: 'Fiji Passport Office',\n    },\n    dataDictionaries: {\n      areaExternalCode: 'http://data-dictionary.tamanu-fiji.org/rispacs-billing-code.html',\n      encounterClass: 'http://terminology.hl7.org/CodeSystem/v3-ActCode',\n      ethnicityId: 'http://data-dictionary.tamanu-fiji.org/extensions/ethnic-group-code.html',\n      imagingStudyAccessionId: 'http://data-dictionary.tamanu-fiji.org/ris-accession-number.html',\n      labRequestDisplayId: 'http://tamanu.io/data-dictionary/labrequest-reference-number.html',\n      locationPhysicalType: 'http://terminology.hl7.org/CodeSystem/location-physical-type',\n      patientDisplayId: 'http://tamanu.io/data-dictionary/application-reference-number.html',\n      serviceRequestImagingDisplayId:\n        'http://data-dictionary.tamanu-fiji.org/tamanu-mrid-imagingrequest.html',\n      serviceRequestImagingId:\n        'http://data-dictionary.tamanu-fiji.org/tamanu-id-imagingrequest.html',\n      serviceRequestLabDisplayId:\n        'http://data-dictionary.tamanu-fiji.org/tamanu-mrid-labrequest.html',\n      serviceRequestLabId: 'http://data-dictionary.tamanu-fiji.org/tamanu-id-labrequest.html',\n      testMethod: 'http://tamanu.io/data-dictionary/covid-test-methods',\n    },\n    nullLastNameValue: 'NoLastName',\n  },\n  honeycomb: {\n    enabled: true,\n    sampleRate: 100, // 100 = 1/100 = 1% of traces get sent to honeycomb\n    // in contrast, logs are always sent\n  },\n  integrations: {\n    euDcc: {\n      enabled: false,\n      // Responsible org for vax cert issuance, e.g. 'Ministry of Health of the Tamanu Republic'.\n      // If null defaults to the facility name.\n      issuer: null,\n    },\n    fhir: {\n      // Enabling the HTTP routes and enabling the worker are completely separate:\n      // one may be enabled without the other and vice versa. The worker is on by\n      // default so that FHIR resources can be used as a target for reports without\n      // the FHIR API being exposed to the public in a deployment that doesn't need it.\n      enabled: false, // the HTTP routes\n      parameters: {\n        _count: {\n          default: 20,\n          max: 20,\n        },\n      },\n      worker: {\n        concurrency: 100,\n        enabled: true, // the materialisation worker\n      },\n    },\n    fijiAspenMediciReport: {\n      enabled: false,\n    },\n    fijiVps: {\n      enabled: false,\n      requireClientHeaders: true,\n    },\n    fijiVrs: {\n      enabled: false,\n      flagInsteadOfDeleting: true,\n      requireClientHeaders: true,\n      // don't retry pending records unless they're retryMinAgeMs old\n      retryMinAgeMs: 60000,\n      retrySchedule: '*/30 * * * * *',\n      // refresh the token if it's within tokenExpiryMarginMs milliseconds of expiry\n      tokenExpiryMarginMs: 60000,\n    },\n    mSupply: {\n      enabled: false,\n      requireClientHeaders: true,\n    },\n    omniLab: {\n      enabled: false,\n    },\n    signer: {\n      enabled: false,\n      // For VDS-NC: exactly 2 uppercase letters/numbers, must be unique in country,\n      // ref 9303-13 ยง2.2.1(a)\n      // For EU DCC: at least 1 character, must be unique in country, should be descriptive\n      commonName: 'TA',\n      // For EU DCC only: the name of the issuing organisation (provider/O of the DSC)\n      // \"provider\": \"Tamanu\",\n      // Email address for CSCA signing contact\n      sendRequestTo: 'admin@tamanu.io',\n    },\n    vdsNc: {\n      enabled: false,\n    },\n  },\n  loadshedder: {\n    // paths are checked sequentially until a path matches a prefix\n    // (e.g. the path `/v1/sync/xxx/pull` would match the prefix `/v1/sync/`)\n    //\n    // if the path of a request matches a prefix it is added to that queue and\n    // may be dropped under heavy load\n    //\n    // if the path of a request matches nothing, the server never drops the\n    // request\n    queues: [\n      // sync queue\n      // (defaults to shedding requests for sync or attachments earlier than other requests)\n      {\n        maxActiveRequests: 4,\n        maxQueuedRequests: 8,\n        name: 'low_priority',\n        prefixes: ['/v1/sync', '/v1/attachment'],\n        queueTimeout: 7500,\n      },\n      // global queue for non-sync non-attachment requests\n      // (defaults to queueing more requests than sync/attachments and them shedding much later)\n      {\n        maxActiveRequests: 8,\n        maxQueuedRequests: 32,\n        name: 'high_priority',\n        prefixes: ['/'],\n        queueTimeout: 7500,\n      },\n    ],\n  },\n  log: {\n    color: true,\n    consoleLevel: 'http',\n    path: '',\n  },\n  mailgun: {\n    domain: 'tupaia.org',\n    from: 'tamanu@tupaia.org',\n  },\n  notifications: {\n    certificates: {\n      labTestCategoryIds: [],\n    },\n  },\n  patientMerge: {\n    // can be one of \"RENAME\", \"DESTROY\", or \"NONE\"\n    // RENAME sets the patient's firstName to 'Deleted' and lastName to 'Patient'\n    // DESTROY sets deleted_at to a timestamp\n    // NONE is a no-op and does nothing\n    deletionAction: 'RENAME',\n  },\n  questionCodeIds: {\n    email: null,\n    nationalityId: null,\n    passport: null,\n  },\n  reportProcess: {\n    // Provide an object {} for the env of child process\n    childProcessEnv: null,\n    // provide an array [] if you want to override the options, eg: ['--max-old-space-size=4096']\n    processOptions: null,\n    runInChildProcess: true,\n    // Report process timeout in 2 hours.\n    timeOutDurationSeconds: 7200,\n  },\n  scheduledReports: [],\n  schedules: {\n    // batchSize == run through them all in one run, in batches of N\n    // limit == run through N per task run\n    // schedule: 5 fields == first is minutes, 6 fields == first is SECONDS\n    automaticLabTestResultPublisher: {\n      enabled: false,\n      limit: 300,\n      results: {\n        'labTestType-RATNegative': {\n          labTestMethodId: 'labTestMethod-RAT',\n          result: 'Negative',\n        },\n        'labTestType-RATPositive': {\n          labTestMethodId: 'labTestMethod-RAT',\n          result: 'Positive',\n        },\n      },\n      schedule: '*/15 * * * *',\n    },\n    certificateNotificationProcessor: {\n      limit: 10,\n      // every 30 seconds /!\\\n      schedule: '*/30 * * * * *',\n    },\n    covidClearanceCertificatePublisher: {\n      enabled: false,\n      // every 30 seconds /!\\\n      schedule: '*/30 * * * *',\n    },\n    deceasedPatientDischarger: {\n      batchSize: 100,\n      batchSleepAsyncDurationInMilliseconds: 50,\n      // once an hour\n      schedule: '29 * * * *',\n    },\n    fhirMissingResources: {\n      enabled: true,\n      // once a day, time does not matter (better in off hours)\n      schedule: '48 1 * * *',\n    },\n    outpatientDischarger: {\n      batchSize: 1000,\n      batchSleepAsyncDurationInMilliseconds: 50,\n      // every day at 2 AM\n      schedule: '0 2 * * *',\n    },\n    patientEmailCommunicationProcessor: {\n      limit: 10,\n      // every 30seconds /!\\\n      schedule: '*/30 * * * * *',\n    },\n    patientMergeMaintainer: {\n      // once an hour at minute 12\n      schedule: '12 * * * *',\n    },\n    plannedMoveTimeout: {\n      batchSize: 100,\n      batchSleepAsyncDurationInMilliseconds: 50,\n      enabled: true,\n      // Once an hour\n      schedule: '0 * * * *',\n      timeoutHours: 24,\n    },\n    reportRequestProcessor: {\n      limit: 10,\n      schedule: '*/30 * * * * *',\n    },\n    signerRenewalChecker: {\n      // needs to happen after the Renewal Checker, and regularly thereafter as a retry mechanism\n      schedule: '0 0 * * *',\n    },\n    signerRenewalSender: {\n      schedule: '30 * * * *',\n    },\n    signerWorkingPeriodChecker: {\n      schedule: '0 1 * * *',\n    },\n    staleSyncSessionCleaner: {\n      enabled: true,\n      schedule: '* * * * *',\n      staleSessionSeconds: 3600,\n    },\n  },\n  sync: {\n    adjustDataBatchSize: 20000,\n    // at its very large default, maxRecordsPerPullSnapshotChunk is essentially \"off\"\n    // can be turned on by lowering to some amount that seems appropriate\n    // if snapshot performance is an issue\n    maxRecordsPerPullSnapshotChunk: 1000000000,\n    numberConcurrentPullSnapshots: 4,\n    persistedCacheBatchSize: 20000,\n    readOnly: false,\n    syncAllEncountersForTheseVaccines: [],\n  },\n  updateUrls: {\n    mobile: '',\n  },\n  validateQuestionConfigs: {\n    enabled: false,\n  },\n};\n"],"names":["centralDefaults","allowMismatchedTimeZones","cors","allowedOrigin","countryTimeZone","disk","diskPath","freeSpaceRequired","gigabytesForUploadingDocuments","export","maxFileSizeInMB","hl7","assigners","patientDisplayId","patientDrivingLicense","patientPassport","dataDictionaries","areaExternalCode","encounterClass","ethnicityId","imagingStudyAccessionId","labRequestDisplayId","locationPhysicalType","serviceRequestImagingDisplayId","serviceRequestImagingId","serviceRequestLabDisplayId","serviceRequestLabId","testMethod","nullLastNameValue","honeycomb","enabled","sampleRate","integrations","euDcc","issuer","fhir","parameters","_count","default","max","worker","concurrency","fijiAspenMediciReport","fijiVps","requireClientHeaders","fijiVrs","flagInsteadOfDeleting","retryMinAgeMs","retrySchedule","tokenExpiryMarginMs","mSupply","omniLab","signer","commonName","sendRequestTo","vdsNc","loadshedder","queues","maxActiveRequests","maxQueuedRequests","name","prefixes","queueTimeout","log","color","consoleLevel","path","mailgun","domain","from","notifications","certificates","labTestCategoryIds","patientMerge","deletionAction","questionCodeIds","email","nationalityId","passport","reportProcess","childProcessEnv","processOptions","runInChildProcess","timeOutDurationSeconds","scheduledReports","schedules","automaticLabTestResultPublisher","limit","results","labTestMethodId","result","schedule","certificateNotificationProcessor","covidClearanceCertificatePublisher","deceasedPatientDischarger","batchSize","batchSleepAsyncDurationInMilliseconds","fhirMissingResources","outpatientDischarger","patientEmailCommunicationProcessor","patientMergeMaintainer","plannedMoveTimeout","timeoutHours","reportRequestProcessor","signerRenewalChecker","signerRenewalSender","signerWorkingPeriodChecker","staleSyncSessionCleaner","staleSessionSeconds","sync","adjustDataBatchSize","maxRecordsPerPullSnapshotChunk","numberConcurrentPullSnapshots","persistedCacheBatchSize","readOnly","syncAllEncountersForTheseVaccines","updateUrls","mobile","validateQuestionConfigs"],"mappings":"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"}