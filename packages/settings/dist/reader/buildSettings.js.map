{"version":3,"sources":["../../src/reader/buildSettings.ts"],"sourcesContent":["import { merge } from 'lodash';\n\n// TODO: use that from constants package\nimport { SETTINGS_SCOPES } from '@tamanu/constants';\n\nimport { centralDefaults } from '../defaults/central';\nimport { facilityDefaults } from '../defaults/facility';\nimport { globalDefaults } from '../defaults/global';\nimport { Models, SettingsDBReader } from './readers/SettingsDBReader';\nimport { SettingsJSONReader } from './readers/SettingsJSONReader';\n\nfunction getReaders(models: Models, facilityId?:string) {\n  return facilityId\n    ? [\n      new SettingsDBReader(models, SETTINGS_SCOPES.FACILITY, facilityId),\n      new SettingsDBReader(models, 'global'),\n      new SettingsJSONReader(facilityDefaults),\n      new SettingsJSONReader(globalDefaults),\n    ]\n    : [\n      new SettingsDBReader(models, 'central'),\n      new SettingsDBReader(models, 'global'),\n      new SettingsJSONReader(centralDefaults),\n      new SettingsJSONReader(globalDefaults),\n    ];\n}\n\nexport async function buildSettings(models: Models, facilityId?: string) {\n  const readers = getReaders(models, facilityId);\n  let settings = {};\n  for (const reader of readers) {\n    const value = await reader.getSettings();\n    if (value) {\n      // Prioritize the previous one\n      settings = merge(value, settings);\n    }\n  }\n  return settings;\n}\n"],"names":["buildSettings","getReaders","models","facilityId","SettingsDBReader","SETTINGS_SCOPES","FACILITY","SettingsJSONReader","facilityDefaults","globalDefaults","centralDefaults","readers","settings","reader","value","getSettings","merge"],"mappings":";;;;+BA2BsBA;;aAAAA;;wBA3BA;2BAGU;yBAEA;0BACC;wBACF;kCACU;oCACN;AAEnC,SAASC,WAAWC,MAAc,EAAEC,UAAkB,EAAE;IACtD,OAAOA,aACH;QACA,IAAIC,kCAAgB,CAACF,QAAQG,0BAAe,CAACC,QAAQ,EAAEH;QACvD,IAAIC,kCAAgB,CAACF,QAAQ;QAC7B,IAAIK,sCAAkB,CAACC,0BAAgB;QACvC,IAAID,sCAAkB,CAACE,sBAAc;KACtC,GACC;QACA,IAAIL,kCAAgB,CAACF,QAAQ;QAC7B,IAAIE,kCAAgB,CAACF,QAAQ;QAC7B,IAAIK,sCAAkB,CAACG,wBAAe;QACtC,IAAIH,sCAAkB,CAACE,sBAAc;KACtC;AACL;AAEO,eAAeT,cAAcE,MAAc,EAAEC,UAAmB,EAAE;IACvE,MAAMQ,UAAUV,WAAWC,QAAQC;IACnC,IAAIS,WAAW,CAAC;IAChB,KAAK,MAAMC,UAAUF,QAAS;QAC5B,MAAMG,QAAQ,MAAMD,OAAOE,WAAW;QACtC,IAAID,OAAO;YACT,8BAA8B;YAC9BF,WAAWI,IAAAA,aAAK,EAACF,OAAOF;QAC1B,CAAC;IACH;IACA,OAAOA;AACT"}