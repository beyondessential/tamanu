{
  "port": 3000,
  // this should be set to the external address of the server, e.g. "https://central-dev.tamanu.io"
  "canonicalHostName": "http://localhost:3000",
  "db": {
    "name": "tamanu-sync",
    // when verbose to true, log.consoleLevel must be set to "debug" to see any output
    "verbose": false,
    "username": "",
    "password": "",
    "migrateOnStartup": false
  },
  "updateUrls": {
    "mobile": ""
  },
  "log": {
    "path": "",
    "consoleLevel": "http",
    "color": true
  },
  "honeycomb": {
    "apiKey": "",
    "dataset": "tamanu-general",
    "enabled": true
  },
  "sync": {
    "concurrentChannelChecks": 8,
    // embedPatientNotes is a workaround for TAN-1757
    // TODO: remove after 1.21 release
    "embedPatientNotes": false,
    // allowUntil makes sync only export records that were updated before the sync started
    // this stops sync from sending newly updated records that might cause conflicts
    // however, it could also prevent sync from syncing frequently changing records
    // TODO: remove after 1.21 release
    "allowUntil": true
  },
  "loadshedder": {
    // paths are checked sequentially until a path matches a prefix
    // (e.g. the path `/v1/sync/patient` would match the prefix `/v1/sync/`)
    //
    // if the path of a request matches a prefix it is added to that queue and
    // may be dropped under heavy load
    //
    // if the path of a request matches nothing, the server never drops the
    // request
    "queues": [
      // sync queue
      // (defaults to shedding requests for sync or attachments earlier than other requests)
      {
        "name": "low_priority",
        "prefixes": ["/v1/sync", "/v1/attachment"],
        "maxActiveRequests": 4,
        "maxQueuedRequests": 8,
        "queueTimeout": 500
      },
      // global queue for non-sync non-attachment requests
      // (defaults to queueing more requests than sync/attachments and them shedding much later)
      {
        "name": "high_priority",
        "prefixes": ["/"],
        "maxActiveRequests": 8,
        "maxQueuedRequests": 32,
        "queueTimeout": 2000
      }
    ]
  },
  "auth": {
    // this secret should be set if more than one process of the sync-server is running
    // otherwise, each process will use a different key and tokens won't match
    "secret": null,
    "saltRounds": 12,
    "tokenDuration": "1h",
    "reportNoUserError": false,
    "allowDummyToken": false,
    "useHardcodedPermissions": true,
    "initialUser": {
      "email": "admin@tamanu.io",
      "displayName": "Initial Admin",
      "role": "admin",
      "password": "admin"
    },
    "resetPassword": {
      "tokenLength": 6,
      "tokenExpiry": 20
    }
  },
  "mailgun": {
    "domain": "",
    "apiKey": "",
    "from": ""
  },
  "cors": {
    "allowedOrigin": ""
  },
  "schedules": {
    // batchSize == run through them all in one run, in batches of N
    // limit == run through N per task run
    // schedule: 5 fields == first is minutes, 6 fields == first is SECONDS

    "outpatientDischarger": {
      // every day at 11 PM
      "schedule": "0 11 * * *",
      "batchSize": 1000,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "patientEmailCommunicationProcessor": {
      // every 30seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "deceasedPatientDischarger": {
      // once an hour
      "schedule": "29 * * * *",
      "batchSize": 100,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "certificateNotificationProcessor": {
      // every 30 seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "reportRequestProcessor": {
      // every 30 seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "signerRenewalChecker": {
      "schedule": "0 0 * * *"
    },
    "signerRenewalSender": {
      // needs to happen after the Renewal Checker, and regularly thereafter as a retry mechanism
      "schedule": "30 * * * *"
    },
    "signerWorkingPeriodChecker": {
      "schedule": "0 1 * * *"
    },
    "automaticLabTestResultPublisher": {
      "enabled": false,
      "schedule": "*/15 * * * *",
      "limit": 300,
      "results": {
        "labTestType-RATPositive": {
          "labTestMethodId": "labTestMethod-RAT",
          "result": "Positive"
        },
        "labTestType-RATNegative": {
          "labTestMethodId": "labTestMethod-RAT",
          "result": "Negative"
        }
      }
    },
    "covidClearanceCertificatePublisher": {
      "enabled": false,
      "schedule": "*/30 * * * *",
      "daysSinceSampleTime": 13,
      "after": "2022-09-01",
      "labTestCategories": [],
      "labTestTypes": []
    },
    "duplicateAdditionalDataDeleter": {
      "enabled": true,
      "schedule": "*/15 * * * *"
    },
    "fhirMaterialiser": {
      "enabled": true, // only when integrations.fhir is on
      "schedule": "*/1 * * * *",
      "limit": 100
    }
  },
  "integrations": {
    "fijiVrs": {
      "enabled": false,
      "host": "http://uat-vra.digitalfiji.gov.fj:8786",
      "username": null,
      "password": null,
      // refresh the token if it's within tokenExpiryMarginMs milliseconds of expiry
      "tokenExpiryMarginMs": 60000,
      "flagInsteadOfDeleting": true,
      "retrySchedule": "*/30 * * * * *",
      // don't retry pending records unless they're retryMinAgeMs old
      "retryMinAgeMs": 60000,
      "requireClientHeaders": true
    },
    "fijiVps": {
      "enabled": false,
      "requireClientHeaders": true
    },
    "euDcc": {
      "enabled": false,
      "issuer": null // Responsible org for vax cert issuance, e.g. 'Ministry of Health of the Tamanu Republic'. If null defaults to the facility name.
    },
    "vdsNc": {
      "enabled": false
    },
    "signer": {
      "enabled": false,

      // Encryption key for ICAO Signer key material (stored in DB).
      // This must be unique per country/installation AND NEVER CHANGED.
      // It must be at least 32 bytes of random data in Base64.
      // $ openssl rand -base64 32
      "keySecret": null,

      // For VDS-NC: exactly 2 uppercase letters/numbers, must be unique in country, ref 9303-13 §2.2.1(a)
      // For EU DCC: at least 1 character, must be unique in country, should be descriptive
      "commonName": "TA",

      // For EU DCC only: the name of the issuing organisation (provider/O of the DSC)
      // "provider": "Tamanu",

      // Email address for CSCA signing contact
      "sendRequestTo": "admin@tamanu.io"
    },
    "fijiAspenMediciReport": {
      "enabled": false
    },
    "mSupply": {
      "enabled": false,
      "requireClientHeaders": true
    },
    "fhir": {
      "enabled": false
    }
  },
  // on the sync-server, don't read these values from config!
  // use the getLocalisation() helper in packages/sync-server/app/localisation.js
  // this will ensure we can read these values from the database in the future
  "localisation": {
    "allowInvalid": false,
    // the labResultWidget and timeZone keys are here for legacy reasons
    // don't put anything else in the top level of localisation unless it relates to localisation itself
    "labResultWidget": {
      "categoryWhitelist": ["labTestCategory-COVID"],
      "testTypeWhitelist": ["labTestType-COVID"]
    },
    "data": {
      // To do: review this section when implementing the patient charts feature
      "units": {
        "temperature": "celsius"
      },
      "country": {
        "name": "",
        "alpha-2": "",
        "alpha-3": ""
      },
      "fields": {
        "countryName": {
          "shortLabel": "Country",
          "longLabel": "Country",
          "hidden": false
        },
        "emergencyContactName": {
          "shortLabel": "Emergency contact name",
          "longLabel": "Emergency contact name"
        },
        "emergencyContactNumber": {
          "shortLabel": "Emergency contact number",
          "longLabel": "Emergency contact number"
        },
        "markedForSync": {
          "shortLabel": "Sync",
          "longLabel": "Marked for sync"
        },
        "displayId": {
          "shortLabel": "NHN",
          "longLabel": "National Health Number"
        },
        "firstName": {
          "shortLabel": "First name",
          "longLabel": "First name"
        },
        "middleName": {
          "shortLabel": "Middle name",
          "longLabel": "Middle name",
          "hidden": false
        },
        "lastName": {
          "shortLabel": "Last name",
          "longLabel": "Last name"
        },
        "culturalName": {
          "shortLabel": "Cultural name",
          "longLabel": "Cultural/traditional name",
          "hidden": false
        },
        "sex": {
          "shortLabel": "Sex",
          "longLabel": "Sex",
          "hidden": false
        },
        "email": {
          "shortLabel": "Email",
          "longLabel": "Email",
          "hidden": false
        },
        "dateOfBirth": {
          "shortLabel": "DOB",
          "longLabel": "Date of birth"
        },
        "dateOfBirthFrom": {
          "shortLabel": "DOB from",
          "longLabel": "Date of birth from"
        },
        "dateOfBirthTo": {
          "shortLabel": "DOB to",
          "longLabel": "Date of birth to"
        },
        "dateOfBirthExact": {
          "shortLabel": "DOB exact",
          "longLabel": "Date of birth exact"
        },
        "dateOfDeath": {
          "shortLabel": "Death",
          "longLabel": "Date of death"
        },
        "bloodType": {
          "shortLabel": "Blood type",
          "longLabel": "Blood type",
          "hidden": false
        },
        "title": {
          "shortLabel": "Title",
          "longLabel": "Title",
          "hidden": false
        },
        "placeOfBirth": {
          "shortLabel": "Birth location",
          "longLabel": "Birth location",
          "hidden": false
        },
        "countryOfBirthId": {
          "shortLabel": "Country of birth",
          "longLabel": "Country of birth",
          "hidden": false
        },
        "maritalStatus": {
          "shortLabel": "Marital status",
          "longLabel": "Marital status",
          "hidden": false
        },
        "primaryContactNumber": {
          "shortLabel": "Primary contact number",
          "longLabel": "Primary contact number",
          "hidden": false
        },
        "secondaryContactNumber": {
          "shortLabel": "Secondary contact number",
          "longLabel": "Secondary contact number",
          "hidden": false
        },
        "socialMedia": {
          "shortLabel": "Social media",
          "longLabel": "Social media",
          "hidden": false
        },
        "settlementId": {
          "shortLabel": "Settlement",
          "longLabel": "Settlement",
          "hidden": false
        },
        "streetVillage": {
          "shortLabel": "Residential landmark",
          "longLabel": "Residential landmark",
          "hidden": false
        },
        "cityTown": {
          "shortLabel": "City/town",
          "longLabel": "City/town",
          "hidden": false
        },
        "subdivisionId": {
          "shortLabel": "Sub division",
          "longLabel": "Sub division",
          "hidden": false
        },
        "divisionId": {
          "shortLabel": "Division",
          "longLabel": "Division",
          "hidden": false
        },
        "countryId": {
          "shortLabel": "Country",
          "longLabel": "Country",
          "hidden": false
        },
        "medicalAreaId": {
          "shortLabel": "Medical area",
          "longLabel": "Medical area",
          "hidden": false
        },
        "nursingZoneId": {
          "shortLabel": "Nursing zone",
          "longLabel": "Nursing zone",
          "hidden": false
        },
        "nationalityId": {
          "shortLabel": "Nationality",
          "longLabel": "Nationality",
          "hidden": false
        },
        "ethnicityId": {
          "shortLabel": "Ethnicity",
          "longLabel": "Ethnicity",
          "hidden": false
        },
        "occupationId": {
          "shortLabel": "Occupation",
          "longLabel": "Occupation",
          "hidden": false
        },
        "educationalLevel": {
          "shortLabel": "Educational attainment",
          "longLabel": "Educational attainment",
          "hidden": false
        },
        "villageName": {
          "shortLabel": "Village",
          "longLabel": "Village",
          "hidden": false
        },
        "villageId": {
          "shortLabel": "Village",
          "longLabel": "Village",
          "hidden": false
        },
        "birthCertificate": {
          "shortLabel": "Birth certificate",
          "longLabel": "Birth certificate number",
          "hidden": false
        },
        "drivingLicense": {
          "shortLabel": "Driving license",
          "longLabel": "Driving license number",
          "hidden": false
        },
        "passport": {
          "shortLabel": "Passport",
          "longLabel": "Passport number",
          "hidden": false
        },
        "religionId": {
          "shortLabel": "Religion",
          "longLabel": "Religion",
          "hidden": false
        },
        "patientBillingTypeId": {
          "shortLabel": "Type",
          "longLabel": "Patient type",
          "hidden": false
        },
        "ageRange": {
          "shortLabel": "Age range",
          "longLabel": "Age range"
        },
        "age": {
          "shortLabel": "Age",
          "longLabel": "Age"
        },
        "motherId": {
          "shortLabel": "Mother",
          "longLabel": "Mother",
          "hidden": false
        },
        "fatherId": {
          "shortLabel": "Father",
          "longLabel": "Father",
          "hidden": false
        },
        "birthWeight": {
          "shortLabel": "Birth weight (kg)",
          "longLabel": "Birth weight (kg)",
          "hidden": false
        },
        "birthLength": {
          "shortLabel": "Birth length (cm)",
          "longLabel": "Birth length (cm)",
          "hidden": false
        },
        "birthDeliveryType": {
          "shortLabel": "Delivery type",
          "longLabel": "Delivery type",
          "hidden": false
        },
        "gestationalAgeEstimate": {
          "shortLabel": "Gestational age (weeks)",
          "longLabel": "Gestational age (weeks)",
          "hidden": false
        },
        "apgarScoreOneMinute": {
          "shortLabel": "Apgar score at 1 min",
          "longLabel": "Apgar score at 1 min",
          "hidden": false
        },
        "apgarScoreFiveMinutes": {
          "shortLabel": "Apgar score at 5 min",
          "longLabel": "Apgar score at 5 min",
          "hidden": false
        },
        "apgarScoreTenMinutes": {
          "shortLabel": "Apgar score at 10 min",
          "longLabel": "Apgar score at 10 min",
          "hidden": false
        },
        "timeOfBirth": {
          "shortLabel": "Time of birth",
          "longLabel": "Time of birth",
          "hidden": false
        },
        "attendantAtBirth": {
          "shortLabel": "Attendant at birth",
          "longLabel": "Attendant at birth",
          "hidden": false
        },
        "nameOfAttendantAtBirth": {
          "shortLabel": "Name of attendant",
          "longLabel": "Name of attendant",
          "hidden": false
        },
        "birthType": {
          "shortLabel": "Single/Plural birth",
          "longLabel": "Single/Plural birth",
          "hidden": false
        },
        "birthFacilityId": {
          "shortLabel": "Name of health facility (if applicable)",
          "longLabel": "Name of health facility (if applicable)",
          "hidden": false
        },
        "registeredBirthPlace": {
          "shortLabel": "Place of birth",
          "longLabel":  "Place of birth",
          "hidden": false
        },
        "referralSourceId": {
          "shortLabel": "Referral source",
          "longLabel":  "Referral source",
          "hidden": false
        },
        "arrivalModeId": {
          "shortLabel": "Arrival mode",
          "longLabel":  "Arrival mode",
          "hidden": false
        },
        "prescriber": {
          "shortLabel": "Prescriber",
          "longLabel":  "Prescriber",
          "hidden": false
        },
        "prescriberId": {
          "shortLabel": "Prescriber ID",
          "longLabel":  "Prescriber ID",
          "hidden": false
        },
        "facility": {
          "shortLabel": "Facility",
          "longLabel": "Facility",
          "hidden": false
        }
      },
      "features": {
        "editPatientDetailsOnMobile": true,
        "enableInvoicing": false,
        "registerNewPatient": true,
        "hideOtherSex": true,
        "enablePatientDeaths": false,
        "mergePopulatedPADRecords": true,
        "enableCovidClearanceCertificate": false,
        "enableDischargeDisposition": false,
        "editDisplayId": false
      },
      "templates": {
        "letterhead": {
          "title": "TAMANU MINISTRY OF HEALTH & MEDICAL SERVICES",
          "subTitle": "PO Box 12345, Melbourne, Australia"
        },
        "signerRenewalEmail": {
          "subject": "Tamanu ICAO Certificate Signing Request",
          "body": "Please sign the following certificate signing request (CSR) with the Country Signing Certificate Authority (CSCA), and return it to the Tamanu team or Tamanu deployment administration team."
        },
        "vaccineCertificateEmail": {
          "subject": "Medical Certificate now available",
          "body": "A medical certificate has been generated for you.\nYour certificate is available attached to this email."
        },
        "covidTestCertificateEmail": {
          "subject": "Medical Certificate now available",
          "body": "A medical certificate has been generated for you.\nYour certificate is attached to this email."
        },
        "covidClearanceCertificateEmail": {
          "subject": "COVID-19 Clearance Certificate now available",
          "body": "A COVID-19 clearance certificate has been generated for you.\nYour certificate is attached to this email."
        },
        "vaccineCertificate": {
          "emailAddress": "tamanu@health.gov",
          "contactNumber": "12345",
          "healthFacility": "State level"
        },
        "covidTestCertificate": {
          "laboratoryName": "Approved test provider"
        }
      },
      "imagingTypes": {},
      "imagingPriorities": [
        { "value": "routine", "label": "Routine" },
        { "value": "urgent", "label": "Urgent" },
        { "value": "asap", "label": "ASAP" },
        { "value": "stat", "label": "STAT" }
      ],
      "printMeasures": {
        "stickerLabelPage": {
          "pageWidth": "210mm",
          "pageHeight": "297mm",
          "pageMarginTop": "15.09mm",
          "pageMarginLeft": "6.4mm",
          "columnTotal": 3,
          "columnWidth": "64mm",
          "columnGap": "3.01mm",
          "rowTotal": 10,
          "rowHeight": "26.7mm",
          "rowGap": "0"
        }
      },
      // The time zone setting is currently only used for Vaccine Certificates
      // Todo: remove this timeZone once all date fields have been migrated to date_time_strings
      "timeZone": null,
      "triageCategories": [
        { "level": 1, "label": "Emergency", "color": "#F76853" },
        { "level": 2, "label": "Very Urgent", "color": "#F17F16" },
        { "level": 3, "label": "Urgent", "color": "#FFCC24" },
        { "level": 4, "label": "Non-urgent", "color": "#47CA80" },
        { "level": 5, "label": "Deceased", "color": "#67A6E3" }
      ],

      // UVCI format for vaccine certificate *previews* on Desktop.
      // This should match whichever of integrations.euDcc or .vdsNc is enabled, and
      // does *not* affect which format is used for the actual PDF certificate when
      // generated in the sync server. Can be `tamanu` or `icao` or `eudcc`.
      // `tamanu` implies that the signing integrations are not enabled.
      "previewUvciFormat": "tamanu",

      "sync": {
        "syncAllEncountersForTheseScheduledVaccines": []
      },
      "disabledReports": []
    }
  },
  "reportProcess": {
    // Report process timeout in 2 hours.
    "timeOutDurationSeconds": 7200,
    "runInChildProcess": true,
    // provide an array [] if you want to override the options, eg: ['--max-old-space-size=4096']
    "processOptions": null,
    // Provide an object {} for the env of child process
    "childProcessEnv": null
  },
  "hl7": {
    "nullLastNameValue": "NoLastName",
    "assigners": {
      "patientDisplayId": "Tamanu",
      "patientDrivingLicense": "RTA",
      "patientPassport": "Fiji Passport Office"
    },
    "dataDictionaries": {
      "testMethod": "http://tamanu.io/data-dictionary/covid-test-methods",
      "patientDisplayId": "http://tamanu.io/data-dictionary/application-reference-number.html",
      "labRequestDisplayId": "http://tamanu.io/data-dictionary/labrequest-reference-number.html"
    }
  },
  "s3": {},
  "scheduledReports": [],
  "disk": {
    "diskPath": "C:/",
    "freeSpaceRequired": {
      "gigabytesForUploadingDocuments": 16
    }
  },
  "questionCodeIds": {
    "passport": null,
    "nationalityId": null,
    "email": null
  },
  "notifications": {
    "certificates": {
      "labTestCategoryIds": []
    }
  },
  "proxy": {
    // Possible values: https://expressjs.com/en/guide/behind-proxies.html
    //
    // This should only be set to servers we trust! `loopback` is a safe default
    // because it means we only trust proxies running on the machine itself, e.g.
    // local nginx.
    //
    // As of 29/08/2022 all our deployments are behind a local nginx proxy and so
    // this shouldn't need to be changed.
    "trusted": ["loopback"]
  },
  "patientMerge": {
    // can be one of "RENAME", "DESTROY", or "NONE"
    // RENAME sets the patient's firstName to 'Deleted' and lastName to 'Patient'
    // DESTROY sets deleted_at to a timestamp
    // NONE is a no-op and does nothing
    "deletionAction": "RENAME"
  },
  // this should be an IANA tzdata timezone
  // @see here for a list of available options https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  "countryTimeZone": null
}
