{
  "port": 3000,
  // this should be set to the external address of the server, e.g. "https://central.main.internal.tamanu.io"
  "canonicalHostName": "http://localhost:3000",
  "db": {
    "name": "tamanu-central",
    // when verbose to true, log.consoleLevel must be set to "debug" to see any output
    "verbose": false,
    "username": "",
    "password": "",
    "migrateOnStartup": false,
    "pool": {
      "max": 10
      // "min": 5,
      // "idle": 10000,
      // "acquire": 60000,
      // "evict": 1000
    },
    "reportSchemas": {
      "enabled": false,
      "connections": {
        "raw": {
          "pool": {
            "max": 5
          },
          "username": "",
          "password": ""
        },
        "reporting": {
          "pool": {
            "max": 5
          },
          "username": "",
          "password": ""
        }
      }
    }
  },
  "updateUrls": {
    "mobile": ""
  },
  "log": {
    "path": "",
    "consoleLevel": "http",
    "color": true
  },
  "honeycomb": {
    "apiKey": "",
    "sampleRate": 100, // 100 = 1/100 = 1% of traces get sent to honeycomb
    // in contrast, logs are always sent
    "enabled": true,
    "level": "info"
  },
  errors: {
    // enable to send errors to a bug tracking service
    enabled: false,
    // right now the only supported service is bugsnag
    type: 'bugsnag',
    // paste your bugsnag API key here
    apiKey: '',
  },
  "sync": {
    "maxConcurrentSessions": 4,
    "persistedCacheBatchSize": 20000,
    "pauseBetweenPersistedCacheBatchesInMilliseconds": 50,
    "adjustDataBatchSize": 20000,
    "syncAllEncountersForTheseVaccines": [],
    "numberConcurrentPullSnapshots": 4,
    "persistUpdateWorkerPoolSize": 5,
    // at its very large default, maxRecordsPerPullSnapshotChunk is essentially "off"
    // can be turned on by lowering to some amount that seems appropriate if snapshot performance is an issue
    "maxRecordsPerPullSnapshotChunk": 1000000000,
    syncSessionTimeoutMs: null,
  },
  "loadshedder": {
    // paths are checked sequentially until a path matches a prefix
    // (e.g. the path `/api/sync/xxx/pull` would match the prefix `/api/sync/`)
    //
    // if the path of a request matches a prefix it is added to that queue and
    // may be dropped under heavy load
    //
    // if the path of a request matches nothing, the server never drops the
    // request
    "queues": [
      // sync queue
      // (defaults to shedding requests for sync or attachments earlier than other requests)
      {
        "name": "low_priority",
        "prefixes": ["/api/sync", "/api/attachment"],
        "maxActiveRequests": 4,
        "maxQueuedRequests": 8,
        "queueTimeout": 7500
      },
      // global queue for non-sync non-attachment requests
      // (defaults to queueing more requests than sync/attachments and them shedding much later)
      {
        "name": "high_priority",
        "prefixes": ["/"],
        "maxActiveRequests": 8,
        "maxQueuedRequests": 32,
        "queueTimeout": 7500
      }
    ]
  },
  "auth": {
    // these secrets should be set if more than one process of the central-server is running
    // otherwise, each process will use a different key and tokens won't match
    "secret": null,
    "saltRounds": 12,
    "tokenDuration": "1h",
    "reportNoUserError": false,
    "useHardcodedPermissions": true,
    "refreshToken": {
      "secret": null,
      "tokenDuration": "30d",
      "absoluteExpiration": false,
      "refreshIdLength": 54
    },
    "resetPassword": {
      "tokenLength": 6,
      "tokenExpiry": 20
    }
  },
  "export": {
    "maxFileSizeInMB": 50
  },
  "mailgun": {
    "domain": "",
    "apiKey": "",
    "from": ""
  },
  "cors": {
    "allowedOrigin": ""
  },
  "schedules": {
    // batchSize == run through them all in one run, in batches of N
    // limit == run through N per task run
    // schedule: 5 fields == first is minutes, 6 fields == first is SECONDS
    "outpatientDischarger": {
      // every day at 2 AM
      "schedule": "0 2 * * *",
      "batchSize": 1000,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "surveyCompletionNotifierProcessor": {
      "enabled": true,
      // every 30seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 100
    },
    "patientEmailCommunicationProcessor": {
      // every 30seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "vaccinationReminderProcessor": {
     // every day at 1 AM
     "schedule": "0 1 * * *",
    },
    "patientTelegramCommunicationProcessor": {
      // every 30seconds /!\
      "schedule": "*/30 * * * * *",
      "batchSize": 100,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "deceasedPatientDischarger": {
      // once an hour
      "schedule": "29 * * * *",
      "batchSize": 100,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "patientMergeMaintainer": {
      // once an hour at minute 12
      "schedule": "12 * * * *"
    },
    "certificateNotificationProcessor": {
      // every 30 seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "IPSRequestProcessor": {
      // every 30 seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "reportRequestProcessor": {
      // every 30 seconds /!\
      "schedule": "*/30 * * * * *",
      "limit": 10
    },
    "signerRenewalChecker": {
      "schedule": "0 0 * * *"
    },
    "signerRenewalSender": {
      // needs to happen after the Renewal Checker, and regularly thereafter as a retry mechanism
      "schedule": "30 * * * *"
    },
    "signerWorkingPeriodChecker": {
      "schedule": "0 1 * * *"
    },
    "automaticLabTestResultPublisher": {
      "enabled": false,
      "schedule": "*/15 * * * *",
      "limit": 300,
      "results": {
        "labTestType-RATPositive": {
          "labTestMethodId": "labTestMethod-RAT",
          "result": "Positive"
        },
        "labTestType-RATNegative": {
          "labTestMethodId": "labTestMethod-RAT",
          "result": "Negative"
        }
      }
    },
    "covidClearanceCertificatePublisher": {
      "enabled": false,
      "schedule": "*/30 * * * *"
    },
    "fhirMissingResources": {
      "enabled": true,
      "schedule": "48 1 * * *" // once a day, time does not matter (better in off hours)
    },
    "plannedMoveTimeout": {
      "enabled": true,
      // Once an hour
      "schedule": "0 * * * *",
      "timeoutHours": 24,
      "batchSize": 100,
      "batchSleepAsyncDurationInMilliseconds": 50
    },
    "staleSyncSessionCleaner": {
      "enabled": true,
      "schedule": "* * * * *",
      "staleSessionSeconds": 3600
    },
    "processSyncQueue": {
      "enabled": true,
      "schedule": "* * * * *"
    }
  },
  "integrations": {
    "fijiVrs": {
      "enabled": false,
      "host": "http://uat-vra.digitalfiji.gov.fj:8786",
      "username": null,
      "password": null,
      // refresh the token if it's within tokenExpiryMarginMs milliseconds of expiry
      "tokenExpiryMarginMs": 60000,
      "flagInsteadOfDeleting": true,
      "retrySchedule": "*/30 * * * * *",
      // don't retry pending records unless they're retryMinAgeMs old
      "retryMinAgeMs": 60000,
      "requireClientHeaders": true
    },
    "fijiVps": {
      "enabled": false,
      "requireClientHeaders": true
    },
    "euDcc": {
      "enabled": false,
      "issuer": null // Responsible org for vax cert issuance, e.g. 'Ministry of Health of the Tamanu Republic'. If null defaults to the facility name.
    },
    "ips": {
      "attester": "Ministry of Health",
      "author": "Tamanu is a free and open-source EHR for low resource and remote settings.",
      "email": {
        "subject": "Your International Patient Summary",
        "bodyText": "Please scan the QR code attached to view your International Patient Summary"
      }
    },
    "vdsNc": {
      "enabled": false
    },
    "signer": {
      "enabled": false,
      // Encryption key for ICAO Signer key material (stored in DB).
      // This must be unique per country/installation AND NEVER CHANGED.
      // It must be at least 32 bytes of random data in Base64.
      // $ openssl rand -base64 32
      "keySecret": null,
      // For VDS-NC: exactly 2 uppercase letters/numbers, must be unique in country, ref 9303-13 §2.2.1(a)
      // For EU DCC: at least 1 character, must be unique in country, should be descriptive
      "commonName": "TA",
      // For EU DCC only: the name of the issuing organisation (provider/O of the DSC)
      // "provider": "Tamanu",
      // Email address for CSCA signing contact
      "sendRequestTo": "admin@tamanu.io"
    },
    "fijiAspenMediciReport": {
      "enabled": false
    },
    "mSupply": {
      "enabled": false,
      "requireClientHeaders": true
    },
    "fhir": {
      // Enabling the HTTP routes and enabling the worker are completely separate:
      // one may be enabled without the other and vice versa. The worker is on by
      // default so that FHIR resources can be used as a target for reports without
      // the FHIR API being exposed to the public in a deployment that doesn't need it.
      "enabled": false, // the HTTP routes
      "worker": {
        "enabled": true, // the materialisation worker
        "concurrency": 100,
        "resourceMaterialisationEnabled": {
          "Patient": true,
          "Encounter": false,
          "Immunization": false,
          "MediciReport": false,
          "Organization": false,
          "Practitioner": false,
          "ServiceRequest": false,
          "Specimen": false
        }
      },
      "parameters": {
        "_count": {
          "default": 20,
          "max": 20
        }
      },
      "extensions": {
        "Patient": {
          "newZealandEthnicity": false
        }
      }
    },
    "omniLab": {
      "enabled": false,
      // Must be set to a random value, and the value must be saved somewhere (at BES we use lastpass)
      // New keys may be issued by running `node dist apiKeys issue fhirIntegration <email> -e '100 years'
      // If this is changed, all API keys using this secret will be revoked and must be reissued
      "secret": null
    }
  },
  // on the central-server, don't read these values from config!
  // use the getLocalisation() helper in packages/central-server/app/localisation.js
  // this will ensure we can read these values from the database in the future
  "localisation": {
    "allowInvalid": false,
    // the labResultWidget and timeZone keys are here for legacy reasons
    // don't put anything else in the top level of localisation unless it relates to localisation itself
    "labResultWidget": {
      "categoryWhitelist": ["labTestCategory-COVID"],
      "testTypeWhitelist": ["labTestType-COVID"]
    },
    "data": {
      // To do: review this section when implementing the patient charts feature
      "units": {
        "temperature": "celsius"
      },
      "country": {
        "name": "",
        "alpha-2": "",
        "alpha-3": ""
      },
      "imagingTypes": {
        // keys are taken from IMAGING_TYPES in shared/constants/imaging
        // e.g.
        // "xRay": { "label": "X-Ray" }
      },
      "imagingCancellationReasons": [
        {
          "value": "clinical",
          "label": "Clinical reason",
          "hidden": false
        },
        {
          "value": "duplicate",
          "label": "Duplicate",
          "hidden": false
        },
        {
          "value": "entered-in-error",
          "label": "Entered in error",
          "hidden": false
        },
        {
          "value": "patient-discharged",
          "label": "Patient discharged",
          "hidden": false
        },
        {
          "value": "patient-refused",
          "label": "Patient refused",
          "hidden": false
        },
        {
          "value": "cancelled-externally",
          "label": "Cancelled externally via API",
          "hidden": true
        },
        {
          "value": "other",
          "label": "Other",
          "hidden": false
        }
      ],
      "labsCancellationReasons": [
        {
          "value": "clinical",
          "label": "Clinical reason"
        },
        {
          "value": "duplicate",
          "label": "Duplicate"
        },
        {
          "value": "entered-in-error",
          "label": "Entered in error"
        },
        {
          "value": "patient-discharged",
          "label": "Patient discharged"
        },
        {
          "value": "patient-refused",
          "label": "Patient refused"
        },
        {
          "value": "other",
          "label": "Other"
        }
      ],
      "layouts": {
        "patientDetails": "generic",
        "mobilePatientModules": {
          "programRegistries": {
            "hidden": false
          },
          "diagnosisAndTreatment": {
            "sortPriority": 0,
            "hidden": false
          },
          "vitals": {
            "sortPriority": 0,
            "hidden": false
          },
          "programs": {
            "sortPriority": 0,
            "hidden": false
          },
          "referral": {
            "sortPriority": 0,
            "hidden": false
          },
          "vaccine": {
            "sortPriority": 0,
            "hidden": false
          },
          "tests": {
            "sortPriority": 0,
            "hidden": false
          }
        },
        "patientTabs": {
          "history": {
            "sortPriority": -100,
            "hidden": false
          },
          "details": {
            "sortPriority": -50,
            "hidden": false
          },
          "results": {
            "sortPriority": 0,
            "hidden": false
          },
          "referrals": {
            "sortPriority": 0,
            "hidden": false
          },
          "programs": {
            "sortPriority": 0,
            "hidden": false
          },
          "documents": {
            "sortPriority": 0,
            "hidden": false
          },
          "vaccines": {
            "sortPriority": 0,
            "hidden": false
          },
          "medication": {
            "sortPriority": 0,
            "hidden": false
          },
          "invoices": {
            "sortPriority": 0,
            "hidden": false
          }
        },
        "sidebar": {
          "patients": {
            "patientsInpatients": {
              hidden: false,
              sortPriority: 0,
            },
            patientsEmergency: {
              hidden: false,
              sortPriority: 0,
            },
            patientsOutpatients: {
              hidden: false,
              sortPriority: 0,
            },
          },
          scheduling: {
            hidden: false,
            sortPriority: 0,
            schedulingAppointments: {
              hidden: false,
              sortPriority: 0,
            },
            schedulingCalendar: {
              hidden: false,
              sortPriority: 0,
            },
            schedulingNew: {
              hidden: false,
              sortPriority: 0,
            },
          },
          medication: {
            hidden: false,
            sortPriority: 0,
            medicationAll: {
              hidden: false,
              sortPriority: 0,
            },
          },
          imaging: {
            hidden: false,
            sortPriority: 0,
            imagingActive: {
              hidden: false,
              sortPriority: 0,
            },
            imagingCompleted: {
              hidden: false,
              sortPriority: 0,
            },
          },
          labs: {
            hidden: false,
            sortPriority: 0,
            labsAll: {
              hidden: false,
              sortPriority: 0,
            },
            labsPublished: {
              hidden: false,
              sortPriority: 0,
            },
          },
          immunisations: {
            hidden: false,
            sortPriority: 0,
            immunisationsAll: {
              hidden: false,
              sortPriority: 0,
            },
          },
          programRegistry: {
            hidden: false,
            sortPriority: 0,
          },
          facilityAdmin: {
            hidden: false,
            sortPriority: 0,
            reports: {
              hidden: false,
              sortPriority: 0,
            },
            bedManagement: {
              hidden: false,
              sortPriority: 0,
            }
          }
        },
      },
      // The time zone setting is currently only used for Vaccine Certificates
      // Todo: remove this timeZone once all date fields have been migrated to date_time_strings
      "timeZone": null,
      // UVCI format for vaccine certificate *previews* on Web.
      // This should match whichever of integrations.euDcc or .vdsNc is enabled, and
      // does *not* affect which format is used for the actual PDF certificate when
      // generated in the central server. Can be `tamanu` or `icao` or `eudcc`.
      // `tamanu` implies that the signing integrations are not enabled.
      "previewUvciFormat": "tamanu",
      "disabledReports": [],
      "vitalEditReasons": [
        {
          "value": "incorrect-patient",
          "label": "Incorrect patient"
        },
        {
          "value": "incorrect-value",
          "label": "Incorrect value recorded"
        },
        {
          "value": "recorded-in-error",
          "label": "Recorded in error"
        },
        {
          "value": "other",
          "label": "Other"
        }
      ],
      "ageDisplayFormat": [
        {
          "as": "days",
          "range": {
            "min": { "duration": { "days": 0 },  "exclusive": false  },
            "max": { "duration": { "days": 8 }, "exclusive": true }
          }
        },
        {
          "as": "weeks",
          "range": {
            "min": { "duration": { "days": 8 } },
            "max": { "duration": { "months": 1 }, "exclusive": true }
          }
        },
        {
          "as": "months",
          "range": {
            "min": { "duration": { "months": 1 } },
            "max": { "duration": { "years": 2 }, "exclusive": true }
          }
        },
        {
          "as": "years",
          "range": {
            "min": { "duration": { "years": 2 } }
          }
        }
      ],
      "supportDeskUrl": "https://bes-support.zendesk.com/hc/en-us"
    }
  },
  "reportProcess": {
    // Report process timeout in 2 hours.
    "timeOutDurationSeconds": 7200,
    "runInChildProcess": true,
    // provide an array [] if you want to override the options, eg: ['--max-old-space-size=4096']
    "processOptions": null,
    // Provide an object {} for the env of child process
    "childProcessEnv": null,
    "sleepAfterReport": {
      "duration": "5m",
      "ifRunAtLeast": "5m",
    },
  },
  "hl7": {
    "nullLastNameValue": "NoLastName",
    "assigners": {
      "patientDisplayId": "Tamanu",
      "patientDrivingLicense": "RTA",
      "patientPassport": "Fiji Passport Office"
    },
    "dataDictionaries": {
      "testMethod": "http://tamanu.io/data-dictionary/covid-test-methods",
      "patientDisplayId": "http://tamanu.io/data-dictionary/application-reference-number.html",
      "labRequestDisplayId": "http://tamanu.io/data-dictionary/labrequest-reference-number.html",
      "areaExternalCode": "http://data-dictionary.tamanu-fiji.org/rispacs-billing-code.html",
      "encounterClass": "http://terminology.hl7.org/CodeSystem/v3-ActCode",
      "serviceRequestImagingDisplayId": "http://data-dictionary.tamanu-fiji.org/tamanu-mrid-imagingrequest.html",
      "serviceRequestImagingId": "http://data-dictionary.tamanu-fiji.org/tamanu-id-imagingrequest.html",
      "serviceRequestLabDisplayId": "http://data-dictionary.tamanu-fiji.org/tamanu-mrid-labrequest.html",
      "serviceRequestLabId": "http://data-dictionary.tamanu-fiji.org/tamanu-id-labrequest.html",
      "serviceRequestLabPanelCodeSystem": "https://www.senaite.com/profileCodes.html",
      "serviceRequestLabPanelExternalCodeSystem": "http://loinc.org",
      "serviceRequestLabTestCodeSystem": "https://www.senaite.com/testCodes.html",
      "serviceRequestLabTestExternalCodeSystem": "http://loinc.org",
      "imagingStudyAccessionId": "http://data-dictionary.tamanu-fiji.org/ris-accession-number.html",
      "ethnicityId": "http://data-dictionary.tamanu-fiji.org/extensions/ethnic-group-code.html",
      "locationPhysicalType": "http://terminology.hl7.org/CodeSystem/location-physical-type",
      "ips": {
        "medicationEncoding": "http://nzmt.org.nz",
        "allergyIntoleranceEncoding": "http://snomed.info/sct",
        "conditionEncoding": "http://snomed.info/sct",
        "immunizationEncoding": "http://nzmt.org.nz",
        "absentUnknown": "http://hl7.org/fhir/uv/ips/CodeSystem/absent-unknown-uv-ips",
      },
      "specimenType": "http://www.senaite.com/data/sample_types",
      "sampleBodySite": "http://bodySITE.NEW"
    }
  },
  "s3": {
    "ips": {
      "region": "ap-southeast-2",
      "bucketName": "bes-tamanu-ips-public",
      "jsonBucketPath": "ips-demo",
      "viewerBucketPath": "viewer",
      "publicUrl": "https://public.tamanu.io"
    }
  },
  "scheduledReports": [],
  "disk": {
    "diskPath": "C:/",
  },
  // Note: this config should be duplicated on the facility server if the same behavior is
  // desired for "this facility" and "all facilities"
  "reportConfig": {
    "encounter-summary-line-list": {
      "includedPatientFieldIds": []
    }
  },
  "questionCodeIds": {
    "passport": null,
    "nationalityId": null,
    "email": null
  },
  "notifications": {
    "certificates": {
      "labTestCategoryIds": []
    }
  },
  "proxy": {
    // Possible values: https://expressjs.com/en/guide/behind-proxies.html
    //
    // This should only be set to servers we trust! `loopback` is a safe default
    // because it means we only trust proxies running on the machine itself, e.g.
    // local nginx.
    //
    // As of 29/08/2022 all our deployments are behind a local nginx proxy and so
    // this shouldn't need to be changed.
    "trusted": ["loopback"]
  },
  "patientMerge": {
    // can be one of "RENAME", "DESTROY", or "NONE"
    // RENAME sets the patient's firstName to 'Deleted' and lastName to 'Patient'
    // DESTROY sets deleted_at to a timestamp
    // NONE is a no-op and does nothing
    "deletionAction": "RENAME"
  },
  "validateQuestionConfigs": {
    "enabled": false
  },
  // this should be an IANA tzdata timezone
  // @see here for a list of available options https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  "countryTimeZone": "Australia/Melbourne",
  "allowMismatchedTimeZones": false,
  "telegramBot": {
    apiToken: "",
    webhook: {
      // this should be set to the external address of the server, e.g. "https://central.main.internal.tamanu.io/api/public/telegram-webhook"
      url: "",
      secret: ""
    }
  },
  "patientCommunication": {
    "retryThreshold": 20
  },
  "language": "en"
}
