{
  "extends": ["@beyondessential/eslint-config-beyondessential", "plugin:prettier/recommended"],
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true
  },
  "plugins": [
    "react-hooks"
  ],
  "rules": {
    // get around an issue in how electron sets up its packages
    // where it can't detect certain dependencies even if they're installed
    // (missing deps should break CI anyway so it's not a big deal)
    // https://github.com/benmosher/eslint-plugin-import/issues/479
    "import/no-extraneous-dependencies": false,

    "no-underscore-dangle": "off",
    "react/prop-types": false,
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",

    // prettier enforces the following jsx rules, and sometimes the styles conflict
    "react/jsx-indent": false,
    "react/jsx-wrap-multilines": false,
    "react/jsx-one-expression-per-line": false,

    "no-continue": 0,

    "no-restricted-syntax": [
      "error",
      {
        selector: "ForInStatement",
        message: "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
      },
      // Remove ForOfStatement - we can use regenerator runtime, and async/await
      // is cleaner if
      //   for (const foo of foos) { await foo.bar(); }
      // is allowed

      // {
      //   selector: "ForOfStatement",
      //   message: "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
      // },
      {
        selector: "LabeledStatement",
        message: "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
      },
      {
        selector: "WithStatement",
        message: "`with` is disallowed in strict mode because it makes code impossible to predict and optimize.",
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.test.js", "**/__tests__/**/*.js"],
      "env": {
        "jest": true // now **/*.test.js files' env has both es6 *and* jest
      },
      "plugins": ["jest"]
    }
  ]
}
