name: Synthetic Test Runner

on:
  workflow_dispatch:
    inputs:
      target_url:
        description: 'Target URL for synthetic tests'
        required: true
      pr_number:
        description: 'PR number'
        required: true
      pr_ref:
        description: 'PR ref'
        required: true
      pr_sha:
        description: 'PR SHA'
        required: true

jobs:
  validate-and-run:
    name: synthetic-test-run-${{ github.event.inputs.pr_number }}-${{ github.run_id }}
    runs-on: ubuntu-latest
    env:
      TARGET_URL: ${{ github.event.inputs.target_url }}
      PR_NUMBER: ${{ github.event.inputs.pr_number }}
      PR_REF: ${{ github.event.inputs.pr_ref }}
      PR_SHA: ${{ github.event.inputs.pr_sha }}

    steps:
      - name: Exit early if triggered by PR
        if: github.event_name == 'pull_request'
        run: |
          echo "Workflow triggered by PR event - exiting early"
          exit 0

      - name: Debug input values
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "PR Number from inputs: ${{ github.event.inputs.pr_number }}"
          echo "PR Ref from inputs: ${{ github.event.inputs.pr_ref }}"
          echo "PR SHA from inputs: ${{ github.event.inputs.pr_sha }}"
          echo "Target URL from inputs: ${{ github.event.inputs.target_url }}"

      - name: Validate required inputs
        run: |
          if [ -z "${{ github.event.inputs.pr_number }}" ] || [ "${{ github.event.inputs.pr_number }}" = "null" ]; then
            echo "Error: PR number is required but not provided"
            exit 1
          fi
          if [ -z "${{ github.event.inputs.pr_ref }}" ] || [ "${{ github.event.inputs.pr_ref }}" = "null" ]; then
            echo "Error: PR ref is required but not provided"
            exit 1
          fi
          if [ -z "${{ github.event.inputs.pr_sha }}" ] || [ "${{ github.event.inputs.pr_sha }}" = "null" ]; then
            echo "Error: PR SHA is required but not provided"
            exit 1
          fi
          if [ -z "${{ github.event.inputs.target_url }}" ] || [ "${{ github.event.inputs.target_url }}" = "null" ]; then
            echo "Error: Target URL is required but not provided"
            exit 1
          fi

      - name: Set dynamic commit status context
        id: metadata
        run: echo "RUN_CONTEXT=synthetic-test-run-$(date -u +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Verify checkbox is still checked
        uses: actions/github-script@v7
        with:
          script: |
            console.log('PR_NUMBER from env:', process.env.PR_NUMBER);
            console.log('PR_NUMBER type:', typeof process.env.PR_NUMBER);
            
            const prNumber = parseInt(process.env.PR_NUMBER);
            console.log('Parsed PR number:', prNumber);
            console.log('Is NaN:', isNaN(prNumber));
            
            if (isNaN(prNumber)) {
              core.setFailed(`Invalid PR number: ${process.env.PR_NUMBER}`);
              return;
            }
            
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const isStillChecked = pr.body?.includes('[x] **Synthetic Test Environment** <!-- #synthetic-test -->');
            if (!isStillChecked) {
              core.setFailed('Checkbox is no longer checked â€“ skipping test.');
            }

      - uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_REF }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - run: npm ci
      - run: npm run build-shared

      - name: Set commit status to pending
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: process.env.PR_SHA,
              state: 'pending',
              context: '${{ steps.metadata.outputs.RUN_CONTEXT }}',
              description: 'Synthetic test running...'
            });

      - name: Run synthetic test
        run: npm run synthetic-test -- -- --target=${{ env.TARGET_URL }}

      - name: Update commit status on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: process.env.PR_SHA,
              state: 'success',
              context: '${{ steps.metadata.outputs.RUN_CONTEXT }}',
              description: 'Synthetic test passed'
            });

      - name: Update commit status on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: process.env.PR_SHA,
              state: 'failure',
              context: '${{ steps.metadata.outputs.RUN_CONTEXT }}',
              description: 'Synthetic test failed'
            });

      - name: Retrigger synthetic test 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Triggering ci-synthetic-test-runner.yml on ref ${{ steps.check.outputs.pr_ref }}"
          gh workflow run --repo ${{ github.repository }} ci-synthetic-test-runner.yml \
            --ref "${{ steps.check.outputs.pr_ref }}" \
            --field target_url="${{ steps.check.outputs.target_url }}" \
            --field pr_number="${{ steps.check.outputs.pr_number }}" \
            --field pr_ref="${{ steps.check.outputs.pr_ref }}" \
            --field pr_sha="${{ steps.check.outputs.pr_sha }}"
