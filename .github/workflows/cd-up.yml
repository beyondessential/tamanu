name: CD Up

on:
  push:
    branches: ["uat-release/**"]

concurrency:
  # only one build or destroy at a time, per PR/branch, but don't cancel existing runs
  group: cd-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write
  id-token: write #Â OIDC token for AWS

jobs:
  info:
    name: Branch info
    uses: ./.github/workflows/branch-info.yml

  build:
    needs: info
    strategy:
      fail-fast: false
      matrix:
        platform:
          - arch: linux/amd64
            runs-on: ubuntu-latest
        package:
          - name: central
            path: central-server
            target: server
          - name: facility
            path: facility-server
            target: server
          - name: frontend
            path: web
            target: frontend

    name: Build ${{ matrix.package.name }} container for ${{ matrix.platform.arch }}
    runs-on: ${{ matrix.platform.runs-on }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-image-push
          role-session-name: GHA@Tamanu=BuildImage

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v4
        with:
          # in PRs, use the actual PR branch, not the merge branch
          ref: ${{ needs.info.outputs.actual_ref }}

      - name: Setup buildkit
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform.arch }}
          cache-from: type=gha,scope=${{ needs.info.outputs.branch }}-${{ matrix.package.name }}
          cache-to: type=gha,mode=max,scope=${{ needs.info.outputs.branch }}-${{ matrix.package.name }}
          build-args: PACKAGE_PATH=${{ matrix.package.path }}
          target: ${{ matrix.package.target }}
          push: true
          labels: |
            org.opencontainers.image.vendor=BES
            org.opencontainers.image.title=Tamanu ${{ matrix.package.name }}
            org.opencontainers.image.url=https://www.bes.au/products/tamanu/
            org.opencontainers.image.source=https://github.com/beyondessential/tamanu/
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.pull_request.merged_at || github.event.head_commit.timestamp }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/tamanu/${{ matrix.package.name }}:sha-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/tamanu/${{ matrix.package.name }}:${{ needs.info.outputs.branch }}
    outputs:
      tag: "sha-${{ github.sha }}"
