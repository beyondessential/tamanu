name: CD Up

on:
  workflow_call:
    secrets:
      PULUMI_ACCESS_TOKEN:
        required: true
      TAILSCALE_DBPROXY_ACCESS_OAUTH:
        required: true
      TAMANU_OPS_SSH:
        required: true

permissions:
  contents: read
  pull-requests: write
  id-token: write #Â OIDC token for AWS

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    env:
      K8S_CORE: tamanu-internal-main
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Checkout ops
        uses: actions/checkout@v4
        with:
          repository: beyondessential/ops
          ssh-key: ${{ secrets.TAMANU_OPS_SSH }}
          path: ops
          ref: main
      - name: Remove ops/.git so pulumi doesn't get confused
        run: rm -rf ops/.git

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Prepare pulumi
        run: npm ci
        working-directory: ops/pulumi

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-secret: ${{ secrets.TAILSCALE_DBPROXY_ACCESS_OAUTH }}
          tags: tag:infra,tag:infra-gha-deploy
      - run: tailscale configure kubeconfig k8s-operator-${{ env.K8S_CORE }}

      # derive the stack name from the branch
      # changing this will create a new stack
      # this must be the same as in cd-down.yml
      - name: Normalise branch/ref name
        uses: actions/github-script@v7
        id: stack
        env:
          GH_HEAD_REF: ${{ github.head_ref }}
          GH_REF_NAME: ${{ github.ref_name }}
        with:
          result-encoding: string
          script: |
            return ((process.env.GH_HEAD_REF || process.env.GH_REF_NAME)
              .toLowerCase()
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, ''));

      - name: Up!
        uses: pulumi/actions@v5
        with:
          work-dir: ops/pulumi/stacks/tamanu/on-k8s
          command: up
          stack-name: bes/${{ steps.stack.outputs.result }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-pr: false
          upsert: true
          config-map: >
            {
            tamanu-on-k8s:imageTag: {value: 'sha-${{ github.sha }}', secret: false},
            tamanu-on-k8s:k8s-core: {value: 'bes/k8s-core/${{ env.K8S_CORE }}', secret: false},
            }
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
