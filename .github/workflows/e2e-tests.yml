name: E2E Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  check-e2e-request:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.pull_request.body;
            const e2eMatch = body.match(/\[(?<checked>[ x])\]\s+\*\*Run E2E Tests\*\* <!-- #e2e -->/);
            core.setOutput('should_run', e2eMatch?.groups.checked === 'x');

  e2e:
    needs: check-e2e-request
    if: needs.check-e2e-request.outputs.should_run == 'true'
    name: E2E Tests (Shard ${{ matrix.shard }})
    strategy:
      fail-fast: false 
      matrix:
        shard: [1/4, 2/4, 3/4, 4/4]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          path: ${{ env.NODE_MODULES_PATHS }}

      - run: npm ci
      - run: npm run build
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Install and start postgres
        run: |
          source .github/scripts/install-postgres-ubuntu.sh 16
          .github/scripts/e2e-test-setup.sh setup-postgres
      - name: Setup central server
        run: .github/scripts/e2e-test-setup.sh setup-central
      - name: Setup facility server
        run: .github/scripts/e2e-test-setup.sh setup-facility
      
      - name: Run Playwright tests
        run: npm run e2e-test -- -- --shard ${{ matrix.shard }}/4
        
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ matrix.shard }}
          path: |
            playwright-report/
            test-results/
          retention-days: 30

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request.number;
            const status = '${{ job.status }}';
            const shard = '${{ matrix.shard }}';
            const message = status === 'success' 
              ? `✅ E2E tests passed for **shard ${shard}**`
              : `❌ E2E tests failed for **shard ${shard}**. [View details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            github.rest.issues.createComment({ owner, repo, issue_number, body: message });