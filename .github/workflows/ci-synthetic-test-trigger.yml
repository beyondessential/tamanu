name: Synthetic Test Trigger

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.check.outputs.pr_number }}
      pr_ref: ${{ steps.check.outputs.pr_ref }}
      pr_sha: ${{ steps.check.outputs.pr_sha }}
      target_url: ${{ steps.check.outputs.target_url }}
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - uses: actions/github-script@v7
        id: check
        with:
          script: |
            const prNumber = context.payload.pull_request?.number || parseInt(core.getInput('pr_number'));
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const syntheticTestMatch = pr.body?.match(/\[x\]\s+.*?<!-- #synthetic-test -->/);
            const shouldRun = !!syntheticTestMatch;

            const targetUrlMatch = pr.body?.match(/\*\*Target URL:\*\*\s*(https?:\/\/[^\s\n]+)/i);
            const targetUrl = targetUrlMatch?.[1] 

            if (!targetUrl && shouldRun) {
              core.setFailed('No target URL found in PR body, please add a target URL to the PR body');
            }

            core.setOutput('target_url', targetUrl);
            core.setOutput('pr_number', prNumber);
            core.setOutput('pr_ref', pr.head.ref); 
            core.setOutput('pr_sha', pr.head.sha);
            core.setOutput('should_run', shouldRun);

      - name: Trigger Synthetic Test Runner
        if: steps.check.outputs.should_run == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Triggering ci-synthetic-test-runner.yml on ref ${{ steps.check.outputs.pr_ref }}"
          gh workflow run --repo ${{ github.repository }} ci-synthetic-test-runner.yml \
            --field attempt=1 \
            --field target_url="${{ steps.check.outputs.target_url }}" \
            --field pr_number="${{ steps.check.outputs.pr_number }}" \
            --field pr_ref="${{ steps.check.outputs.pr_ref }}" \
            --field pr_sha="${{ steps.check.outputs.pr_sha }}" \
            --field max_attempts=5

  cancel-synthetic-test-runs:
    name: Cancel Synthetic Test Runs
    runs-on: ubuntu-latest
    needs: check-and-trigger
    if: needs.check-and-trigger.outputs.should_run != 'true'
    steps:
      - name: Cancel Synthetic Test Runs
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ needs.check-and-trigger.outputs.pr_number }};
            const prBranch = '${{ needs.check-and-trigger.outputs.pr_ref }}';
            
            console.log(`Cancelling in-progress synthetic test runs for PR #${prNumber}`);
            
            // Get all workflow runs
            const { data: runs } = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ci-synthetic-test-runner.yml',
              status: 'in_progress',
              head_branch: prBranch,
              per_page: 100
            });
            
            // Cancel each in-progress run
            for (const run of runs.workflow_runs) {
              console.log(`Cancelling run ${run.id} (branch: ${prBranch})`);
              await github.rest.actions.cancelWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
            }
            
            if (runs.workflow_runs.length === 0) {
              console.log(`No in-progress runs found for branch ${prBranch}`);
            }
