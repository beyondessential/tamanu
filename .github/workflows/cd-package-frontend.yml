name: CD Package Frontend

on:
  workflow_call:

permissions:
  contents: read
  id-token: write #Â OIDC token for AWS

jobs:
  pack:
    runs-on: ubuntu-latest
    name: Pack frontend
    steps:
      - name: Configure AWS Credentials (image)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-image-pull
          role-session-name: GHA@Tamanu=WebPackage

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract version from image
        id: version
        run: |
          docker image inspect ${{ steps.login-ecr.outputs.registry }}/tamanu/frontend:sha-${{ github.sha }}.amd64 \
            | jq '"version=\(.[0] | .Config.Labels["org.opencontainers.image.version"])"' -r >> "$GITHUB_OUTPUT"

      - name: Extract build from image and pack it
        run: |
          docker create --name web ${{ steps.login-ecr.outputs.registry }}/tamanu/frontend:sha-${{ github.sha }}.amd64
          docker cp web:/app tamanu-web-${{ steps.version.outputs.version }}
          docker rm web

          zip -r -0 tamanu-web-$ver.zip tamanu-web-$ver
          tar -cf web-$ver.tar tamanu-web-$ver
          zstd --rm --adapt -T0 -10 web-$ver.tar -o web-$ver.tar.zst

      - name: Sign build
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          curl -Lo bestool https://tools.ops.tamanu.io/bestool/gha/${{ runner.os }}-${{ runner.arch }}
          chmod +x bestool
          ./bestool crypto sign --key-env SIGNING_KEY  \
            --comment 'ts={timestamp} repo=${{ github.repository }} commit=${{ github.sha }} gharun=${{ github.run_id }}' \
            web-*.tar.zst

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-package
          path: web*.tar.zst*
          retention-days: 15
          if-no-files-found: error

      - name: Set S3 destination
        id: destination
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const base = 's3://bes-tamanu-release-servers';
            if (context.ref == 'refs/heads/main') {
              return `${base}/main/${(new Date).toISOString().replaceAll(':','-').split('.')[0]}.${context.sha.slice(0, 10)}`;
            } else if (context.ref.startsWith('refs/tags/v')) {
              return `${base}/${context.ref.replace('refs/tags/v', '')}`;
            } else if (context.ref.startsWith('refs/heads/release/')) {
              return `${base}/${context.ref.replace('refs/tags/', '')}-rc`;
            } else {
              return 'nowhere';
            }

      - name: Configure AWS Credentials (upload)
        if: steps.destination.outputs.result != 'nowhere'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-server-s3
          role-session-name: GHA@Tamanu=WebPackage

      - name: Push to S3
        if: steps.destination.outputs.result != 'nowhere'
        env:
          target: ${{ steps.destination.outputs.result }}
        run: |
          set -exu
          for file in *.tar.zst*; do
            aws s3 cp $file $target/$file --no-progress
          done
