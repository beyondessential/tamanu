name: CI

on:
  workflow_dispatch:
  # pull_request:
  push:
    branches:
      - dev
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: "--max-old-space-size=6144"
  NODE_ENV: test

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          # - macos
          - ubuntu
          # - windows
        node:
          - '16.x'
        postgres:
          # - '12'
          - '14'
        package:
          - lan
          - meta-server
          - "@tamanu/shared"
          - sync-server

    name: Test ${{ matrix.package }} os=${{ matrix.os }} node=${{ matrix.node }} pg=${{ matrix.postgres }}
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: yarn
    - run: yarn
    - run: yarn build-shared

    - name: Install and start postgres ${{ matrix.postgres }} if needed
      if: matrix.package == 'sync-server' || matrix.package == 'lan'
      run: .github/scripts/install-postgres-${{ matrix.os }}.sh ${{ matrix.postgres }} ${{ matrix.package }}

    - if: matrix.package == 'sync-server' || matrix.package == 'lan'
      run: yarn workspace ${{ matrix.package }} run test --shard 1/3
    - if: matrix.package == 'sync-server' || matrix.package == 'lan'
      run: yarn workspace ${{ matrix.package }} run test --shard 2/3
    - if: matrix.package == 'sync-server' || matrix.package == 'lan'
      run: yarn workspace ${{ matrix.package }} run test --shard 3/3

    - if: "!(matrix.package == 'sync-server' || matrix.package == 'lan')"
      run: yarn workspace ${{ matrix.package }} run test

  lint:
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        node:
          - '16.x'
        package:
          - desktop
          - lan
          - meta-server
          - "@tamanu/shared"
          - sync-server

    name: Lint ${{ matrix.package }} node=${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: yarn
    - run: yarn
    - run: yarn build-shared

    - run: yarn workspace ${{ matrix.package }} run lint

  storybook:
    # Workaround for define plugin conflict warning
    env: 
        NODE_ENV: development
    continue-on-error: true
  
    strategy:
      fail-fast: false
      matrix:
        node:
          - '16.x'
  
    name: Test storybook node=${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: yarn
    - run: yarn
    - run: yarn build-shared
    - run: yarn workspace desktop run verify-storybook

  migrations:
    strategy:
      fail-fast: false
      matrix:
        node:
          - '16.x'
        postgres:
          - '12'
          - '14'

    name: Test migrations node=${{ matrix.node }} pg=${{ matrix.postgres }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: yarn
    - run: yarn
    - run: yarn build-shared

    - name: Install and start postgres ${{ matrix.postgres }}
      run: .github/scripts/install-postgres-ubuntu.sh ${{ matrix.postgres }} migrations

    - run: scripts/apply_and_revert_sync_server_migrations.sh

  test-mobile:
    strategy:
      fail-fast: false
      matrix:
        node:
          - '16.x'

    name: Test mobile node=${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        cache: yarn

    - run: yarn install --frozen-lockfile
      working-directory: packages/mobile

    - run: yarn test
      working-directory: packages/mobile

  # Dummy job to have a stable name for PR requirements
  tests-pass:
    if: always() # always run even if dependencies fail
    name: Tests pass
    needs:
      - test
      - lint
      - storybook
      - migrations
      - test-mobile
    runs-on: ubuntu-latest
    steps:
    # fail if ANY dependency has failed or been skipped or cancelled
    - if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')"
      run: exit 1
