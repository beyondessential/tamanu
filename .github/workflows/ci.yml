name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: "--max-old-space-size=6144"
  NODE_ENV: test

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { package: lan,         shard: 1/3, postgres: 14 }
          - { package: lan,         shard: 2/3, postgres: 14 }
          - { package: lan,         shard: 3/3, postgres: 14 }
          - { package: sync-server, shard: 1/3, postgres: 14 }
          - { package: sync-server, shard: 2/3, postgres: 14 }
          - { package: sync-server, shard: 3/3, postgres: 14 }
          - { package: meta-server }
          - { package: "@tamanu/shared" }
          - { package: "desktop" }

    name: Test ${{ matrix.package }} ${{ matrix.shard }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn
      - run: yarn build-shared

      - name: Install and start postgres if needed
        if: matrix.postgres
        run: .github/scripts/install-postgres-ubuntu.sh ${{ matrix.postgres }}
        run: .github/scripts/setup-postgres-one.sh ${{ matrix.package }}

      - name: Run tests
        env:
          package: ${{ matrix.package }}
          shard: ${{ matrix.shard }}
        run: |
          [[ -z "$shard" ]] || shard="--shard $shard"
          yarn workspace "$package" run test $shard

  build-all:
    name: Build all packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn
      - run: yarn build

  lint:
    name: Lint packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn
      - run: yarn build-shared

      - run: yarn lint-all
        env:
          CONTINUE_ON_ERROR: true

  migrations:
    strategy:
      fail-fast: false
      matrix:
        server:
          - sync-server
          - lan
        postgres:
          - '12'
          - '14'
          - '15'

    name: Test migrations server=${{ matrix.server }} pg=${{ matrix.postgres }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - run: yarn
      - run: yarn build-shared

      - name: Install and start postgres ${{ matrix.postgres }}
        run: .github/scripts/install-postgres-ubuntu.sh ${{ matrix.postgres }}
        run: .github/scripts/setup-postgres-one.sh migrations

      - run: scripts/apply_and_revert_server_migrations.sh ${{ matrix.server }}

  test-mobile:
    strategy:
      fail-fast: false
      matrix:
        node:
          - '16.x'

    name: Test mobile node=${{ matrix.node }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - run: yarn install --frozen-lockfile
        working-directory: packages/mobile

      - run: yarn test
        working-directory: packages/mobile

  test-facility-offline:
    name: Test the facility server with the central server being down
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn

      - name: Install and start postgres
        run: github/scripts/install-postgres-ubuntu.sh 14
      - run: github/scripts/test-facility-offline.sh

  # Dummy job to have a stable name for PR requirements
  tests-pass:
    if: always() # always run even if dependencies fail
    name: Tests pass
    needs:
      - test
      - build-all
      - lint
      - migrations
      - test-mobile
    runs-on: ubuntu-latest
    steps:
      # fail if ANY dependency has failed or been skipped or cancelled
      - if: "contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped')
          || contains(needs.*.result, 'cancelled')"
        run: exit 1
