name: Diff Translations
on:
  workflow_dispatch:

env:
  NODE_MODULES_PATHS: |
    node_modules
    packages/*/node_modules
    !packages/mobile/node_modules
jobs:
  run:
    name: Diff Translations
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
    - if: (!startsWith(github.ref, 'refs/heads/release/'))
      run: |
        echo "This workflow can only be run on a release branch"
        exit 1
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.TAMANU_RELEASE_PAT }}
        fetch-depth: 0 # fetch all history so we can generate release notes
        fetch-tags: true

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: yarn
    - uses: actions/cache/restore@v3
      with:
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        path: ${{ env.NODE_MODULES_PATHS }}

    - run: yarn
    - run: yarn build-shared

    - name: get current version
      id: currentv
      run: |
        version=$(jq -r .version package.json)
        echo "current_version=$version" | tee -a $GITHUB_ENV

    - name: get closest previous version
      id: previousv
      run: |
        set -euxo pipefail
        git fetch --tags
        git tag --list \
          | grep -E '^v[0-9]+[.][0-9]+[.][0-9]+$' \
          | cut -c2- \
          | sort --version-sort \
          | awk -v current_version="v${{ steps.currentv.outputs.current_version }}" '$0 < current_version' \
          | tail -n1 \
          | sed 's/^/previous_version=/' \
          | tee -a $GITHUB_OUTPUT

    - name: get this versions translations
      run: |
          set -euxo pipefail

          # Entries for TranslatedEnum
          teoutput="$(node scripts/print-enum-translations.mjs)"

          # Entries for TranslatedText
          ttregex='stringId="([^"]*)"\s*?fallback="([^"]*)'
          ttoutput=$(rg -PINU --multiline-dotall $ttregex -or '"$1","$2"' | rg --multiline-dotall --passthru -U '\n\s*\b' -r '')

          # Entries for getTranslation
          gttregex="getTranslation\(\s*?[\"'](.*?)[\"'],.*?[\"'](.*?)[\"'].*?\)"
          gttoutput=$(rg -PINU --multiline-dotall $gttregex -or '"$1","$2"')

          printf "%s\n%s\n%s" "$ttoutput" "$gttoutput" "$teoutput" | sort -u > translations.csv

    - name: Upload translations
      id: translations-upload
      uses: actions/upload-artifact@v4
      with:
        name: translations-${{ steps.currentv.outputs.current_version }}
        path: translations.csv
        retention-days: 7

    - name: Configure AWS Credentials (upload)
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ap-southeast-2
        role-to-assume: arn:aws:iam::143295493206:role/gha-desktop-s3
        role-session-name: GHA@Tamanu=DiffTranslations
