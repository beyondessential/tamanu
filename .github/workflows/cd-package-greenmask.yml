name: CD Package Greenmask

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
    tags: ['v*.*.*']

permissions:
  contents: write # to update the release
  id-token: write #Â OIDC token for AWS

jobs:
  pack:
    runs-on: ubuntu-latest
    name: Pack greenmask configs
    steps:
      - uses: actions/checkout@v4

      - name: Extract version
        id: version
        run: jq '"version=\(.version)"' package.json -r | tee -a "$GITHUB_OUTPUT"

      - name: Pack up the configs
        run: |
          set -x
          tar -cf greenmask-${{ steps.version.outputs.version }}.tar greenmask
          zstd --rm --adapt -T0 -10 greenmask-${{ steps.version.outputs.version }}.tar

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: greenmask
          path: greenmask-*.tar.zst*
          retention-days: 15
          if-no-files-found: error

      - name: Set S3 destination
        id: destination
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const base = 's3://bes-tamanu-release-servers';
            if (context.ref == 'refs/heads/main') {
              return `${base}/main/${(new Date).toISOString().replaceAll(':','-').split('.')[0]}.${context.sha.slice(0, 10)}`;
            } else if (context.ref.startsWith('refs/tags/v')) {
              return `${base}/${context.ref.replace('refs/tags/v', '')}`;
            } else if (context.ref.startsWith('refs/heads/release/')) {
              return `${base}/${context.ref.replace('refs/tags/', '')}-rc`;
            } else {
              return 'nowhere';
            }

      - name: Configure AWS Credentials (upload)
        if: steps.destination.outputs.result != 'nowhere'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-server-s3
          role-session-name: GHA@Tamanu=GreenmaskPackage

      - name: Push to S3
        if: steps.destination.outputs.result != 'nowhere'
        env:
          target: ${{ steps.destination.outputs.result }}
        run: |
          set -x
          for file in greenmask-*.tar.zst*; do
            aws s3 cp $file $target/$file --no-progress
          done

      - name: Upload to release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: 'greenmask-*.tar.zst*'
