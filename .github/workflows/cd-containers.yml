name: CD Containers

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
  push:
    branches:
      - dev
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: '--max-old-space-size=6144'
  NODE_ENV: test

permissions:
  contents: read
  id-token: write #Â OIDC token for ECR login

jobs:
  build:
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        platform:
          - arch: linux/amd64
            prefix: ''
          # - arch: linux/arm64
          #   prefix: linarm-
          # it works, but it's just too slow
        package:
          - name: central
            path: sync-server
          - name: facility
            path: lan
          # - name: meta
          #   path: meta-server
          # not yet used

    name: Build ${{ matrix.package.name }} container for ${{ matrix.platform.arch }}
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-build
          role-session-name: GithubActionsTamanuBuild

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3

      - name: Install QEMU
        if: matrix.platform.arch == 'linux/arm64'
        uses: docker/setup-qemu-action@v2
      - name: Setup buildkit
        uses: docker/setup-buildx-action@v2

      - name: Prepare image name
        uses: actions/github-script@v6
        id: image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPO_NAME: ${{ matrix.package.name }}
        with:
          result-encoding: string
          script: |
            const registry = process.env.REGISTRY;
            const repo_name = process.env.REPO_NAME;
            const image = `${registry}/tamanu/${repo_name}`;
            console.log({ registry, repo_name, image });
            return image;
      - name: Normalise branch/ref name
        uses: actions/github-script@v6
        id: ref
        env:
          GH_HEAD_REF: ${{ github.head_ref }}
          GH_REF_NAME: ${{ github.ref_name }}
        with:
          result-encoding: string
          script: |
            const head_ref = process.env.GH_HEAD_REF;
            const ref_name = process.env.GH_REF_NAME;
            const ref = head_ref ?? ref_name;
            console.log({ head_ref, ref_name, ref });
            const cleaned = ref
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, '');
            console.log({ cleaned });
            return cleaned;

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform.arch }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: PACKAGE_PATH=${{ matrix.package.path }}
          push: true
          tags: |
            ${{ steps.image.outputs.result }}:${{ matrix.platform.prefix }}${{ github.sha }}
            ${{ steps.image.outputs.result }}:${{ matrix.platform.prefix }}${{ steps.ref.outputs.result }}
