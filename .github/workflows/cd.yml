name: CD

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - labeled
  push:
    branches:
      - main
      - release/*

concurrency:
  group: ${{ github.workflow }}-${{ github.pull_request.id || github.sha || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  id-token: write #Â OIDC token for AWS

jobs:
  build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'auto-deploy'))
    strategy:
      fail-fast: false
      matrix:
        platform:
          - arch: linux/amd64
            runs-on: ubuntu-latest
          # - arch: linux/arm64
          #   runs-on: ubuntu-arm64 # when available
        package:
          - name: central
            path: sync-server
          - name: facility
            path: lan
          # - name: meta
          #   path: meta-server
          # not yet used

    name: Build ${{ matrix.package.name }} container for ${{ matrix.platform.arch }}
    runs-on: ${{ matrix.platform.runs-on }}

    outputs:
      tag: "sha-${{ github.sha }}"
      image: "${{ steps.login-ecr.outputs.registry }}/tamanu/${{ matrix.package.name }}"
      name: ${{ steps.ref.outputs.result }}

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-build
          role-session-name: GithubActionsTamanuBuild

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v3
        with:
          # in PRs, use the actual PR branch, not the merge branch
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      - name: Install QEMU
        if: matrix.platform.arch == 'linux/arm64'
        uses: docker/setup-qemu-action@v2
      - name: Setup buildkit
        uses: docker/setup-buildx-action@v2

      - name: Normalise branch/ref name
        uses: actions/github-script@v6
        id: ref
        env:
          GH_HEAD_REF: ${{ github.head_ref }}
          GH_REF_NAME: ${{ github.ref_name }}
        with:
          result-encoding: string
          script: |
            return ((process.env.GH_HEAD_REF || process.env.GH_REF_NAME)
              .replace(/[^a-z0-9-]/g, '-')
              .replace(/-+/g, '-')
              .replace(/^-|-$/g, ''));

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platform.arch }}
          cache-from: type=gha,scope=${{ steps.ref.outputs.result }}-${{ matrix.package.name }}
          cache-to: type=gha,mode=max,scope=${{ steps.ref.outputs.result }}-${{ matrix.package.name }}
          build-args: PACKAGE_PATH=${{ matrix.package.path }}
          push: true
          labels: |
            org.opencontainers.image.vendor=BES
            org.opencontainers.image.title=Tamanu ${{ matrix.package.name }}
            org.opencontainers.image.url=https://www.bes.au/products/tamanu/
            org.opencontainers.image.source=https://github.com/beyondessential/tamanu/
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.pull_request.merged_at || github.event.head_commit.timestamp }}
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/tamanu/${{ matrix.package.name }}:sha-${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/tamanu/${{ matrix.package.name }}:${{ steps.ref.outputs.result }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-deploy
          role-session-name: GithubActionsTamanuDeploy

      - uses: actions/checkout@v3
        with:
          repository: beyondessential/ops
          ssh-key: ${{ secrets.TAMANU_OPS_SSH }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - name: Prepare pulumi
        run: npm ci
        working-directory: pulumi

      - name: Refresh stack
        uses: pulumi/actions@v3
        with:
          work-dir: pulumi/tamanu-internal
          command: config refresh
          stack-name: bes/${{ steps.build.outputs.name }}
          upsert: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Setup salt
        run: ls
        working-directory: pulumi/tamanu-internal

      - name: Configure image tag
        uses: pulumi/actions@v3
        with:
          work-dir: pulumi/tamanu-internal
          command: config set tamanu-internal:imageTag ${{ needs.build.outputs.tag }}
          stack-name: bes/${{ steps.build.outputs.name }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Up!
        uses: pulumi/actions@v3
        with:
          work-dir: pulumi/tamanu-internal
          command: up
          stack-name: bes/${{ steps.build.outputs.name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-pr: ${{ github.event_name == 'pull_request' }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
