name: CD Down

on:
  workflow_call:
    inputs:
      deploy-name:
        type: string
        required: true
      options:
        type: string
        required: true
    secrets:
      PULUMI_ACCESS_TOKEN:
        required: true
      TAILSCALE_DBPROXY_ACCESS_OAUTH:
        required: true
      TAMANU_OPS_SSH:
        required: true

permissions:
  contents: read
  pull-requests: write
  id-token: write #Â OIDC token for AWS

jobs:
  down:
    name: Bring down ${{ inputs.deploy-name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo '${{ inputs.options }}'
      - id: setup
        uses: ./.github/actions/setup-cd
        with:
          ops-ssh-key: ${{ secrets.TAMANU_OPS_SSH }}
          ops-ref: ${{ fromJson(inputs.options).opsref }}
          tailscale-oauth: ${{ secrets.TAILSCALE_DBPROXY_ACCESS_OAUTH }}
          k8s-core: ${{ fromJson(inputs.options).k8score }}

      - name: Check namespace
        id: check
        continue-on-error: true # so a false check doesn't make the workflow fail
        run: |
          if kubectl get namespace tamanu-${{ inputs.deploy-name }} 2>/dev/null; then
            echo "Namespace exists, checking it's matched to this branch"
            if kubectl -n tamanu-${{ inputs.deploy-name }} \
              get configmap auto-deploy -o json \
              | tee -a /dev/stderr \
              | jq -e '.data | [.repo == "${{ github.repository }}", .ref == "${{ github.ref }}"] | all | not'
            then
              echo "Namespace doesn't belong to this branch, not deleting"
              exit 1
            fi
          else
            echo "Namespace doesn't exist, no need to delete"
            exit 1
          fi

      - # outcome is from before continue-on-error, so will skip if check fails
        if: steps.check.outcome == 'success'
        id: down
        name: Down!
        uses: pulumi/actions@v5
        with:
          work-dir: ops/pulumi/stacks/${{ inputs.options.opsstack }}
          command: destroy
          remove: true
          stack-name: bes/${{ inputs.deploy-name }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-pr: false
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - # if down fails but namespace existed, try to hard-delete the namespace
        if: failure() && steps.down.outcome != 'success'
        name: Delete namespace outright
        run: |
          if kubectl get namespace tamanu-${{ inputs.deploy-name }} 2>/dev/null; then
            echo "Deleting namespace hard"
            kubectl delete namespace tamanu-${{ inputs.deploy-name }}
          fi
