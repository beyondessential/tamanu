name: CD Client

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - release/*

concurrency:
  # only one build or destroy at a time, per PR/branch, but don't cancel existing runs
  group: cd-${{ github.pull_request.id || github.ref }}

permissions:
  contents: read
  pull-requests: write
  id-token: write #Â OIDC token for AWS

jobs:
  info:
    name: Branch info
    uses: ./.github/workflows/branch-info.yml

  build:
    needs: info
    runs-on: ubuntu-latest
    name: Build desktop client
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-desktop-s3
          role-session-name: GithubActionsTamanuS3

      - uses: actions/checkout@v3
        with:
          # in PRs, use the actual PR branch, not the merge branch
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      - name: Setup buildkit
        uses: docker/setup-buildx-action@v2

      - name: Build container
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha,scope=${{ needs.info.outputs.branch }}-desktop
          cache-to: type=gha,mode=max,scope=${{ needs.info.outputs.branch }}-desktop
          target: build-desktop
          push: false
          load: true
          tags: working

      - name: Make output folders
        run: mkdir -p release/{appdata,unelevated}

      - name: Start container
        run: |
          docker run -dit --rm --name working \
            -v $PWD/release:/project/packages/desktop/release \
            working

      - name: Package for Linux, Mac, Windows
        run: |
          docker exec working mv /package-mac.json package.json
          docker exec working yarn run package-only --x64 --linux --mac --win

      - name: Switch to AppData NSIS-only build
        run: docker exec working mv /package-appdata.json package.json

      - name: Package for Windows (AppData NSIS)
        run: docker exec working yarn run package-only --win --x64

      - name: Switch to Unelevated NSIS-only build
        run: docker exec working mv /package-unelevated.json package.json

      - name: Package for Windows (Unelevated NSIS)
        run: docker exec working yarn run package-only --win --x64

      - name: Stop container
        run: docker kill working

      - name: Prepare final outputs
        run: |
          sudo chown -R $USER:$USER release
          mkdir -p ops/{linux,mac,windows-{appdata,msi,system,unelevated}}
          mv release/latest-linux.yml release/*.{AppImage,deb} ops/linux/
          mv release/*-mac* ops/mac/
          mv release/*.msi ops/windows-msi/
          mv release/latest.yml release/*.exe* ops/windows-system/
          mv release/appdata/latest.yml release/appdata/*.exe* ops/windows-appdata/
          mv release/unelevated/latest.yml release/unelevated/*.exe* ops/windows-unelevated/
          rm -rf release

      - name: Upload as artifact
        uses: actions/upload-artifact@v3
        with:
          name: tamanu-desktop
          path: ops/*
          retention-days: 14

      - name: Push to S3
        working-directory: ops
        run: aws s3 sync . s3://${{ vars.DESKTOP_S3_BUCKET }}/${{ needs.info.outputs.branch }} --no-progress
