name: Migration determinism

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - release/*
env:
  NODE_OPTIONS: "--max-old-space-size=6144"
  NODE_ENV: test
  NODE_MODULES_PATHS: |
    node_modules
    packages/*/node_modules
    !packages/mobile/node_modules

jobs:
  test-for-non-determinism:
    strategy:
      fail-fast: false
      matrix:
        postgres:
          # - "12"
          # - "14"
          # - "15"
          # - "16"
          - "17"
    name: on pg=${{ matrix.postgres }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.base_ref }}
      - run: git switch ${{ github.event.pull_request.head.ref || github.ref }}

      # Deal with the case where base_ref diverges from this branch
      # (e.g. main has gone beyond the point where this branch forked)
      - name: Find base
        id: base
        run: |
          realbase=$(git merge-base ${{ github.base_ref || 'HEAD~10' }} HEAD)
          echo "realbase=$realbase" | tee -a "$GITHUB_OUTPUT"

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          path: ${{ env.NODE_MODULES_PATHS }}

      - run: npm ci
      - run: npm run build-shared

      - name: Precheck
        id: precheck
        run: |
          set +e
          npm run --silent --workspace scripts test-determinism -- --since-ref ${{ steps.base.outputs.realbase }} --check-precondition --skip-db-check
          code=$?
          echo "code=$code" | tee -a "$GITHUB_OUTPUT"
          [[ "$code" = "1" ]] && exit 1
          true

      - name: Install and start postgres ${{ matrix.postgres }}
        if: steps.precheck.outputs.code != '2'
        run: |
          source .github/scripts/install-postgres-ubuntu.sh ${{ matrix.postgres }}
          .github/scripts/setup-postgres-for-one-package.sh fake

      # test from the base of the PR or 10 commits back if on main
      - if: steps.precheck.outputs.code != '2'
        run: npm run --silent --workspace scripts test-determinism -- --since-ref ${{ steps.base.outputs.realbase }}

  # Dummy job to have a stable name for PR requirements
  tests-pass:
    if: always() # always run even if dependencies fail
    name: Non-determinism pass
    needs: [test-for-non-determinism]
    runs-on: ubuntu-latest
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
