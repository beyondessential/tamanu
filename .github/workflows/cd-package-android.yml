name: 'Build Android app'

permissions:
  contents: read
  id-token: write #Â OIDC token for AWS

on:
  workflow_call:
    inputs:
      branding:
        type: string
        required: true
        default: tamanu
      server:
        type: string
        required: false

  workflow_dispatch:
    inputs:
      branding:
        description: Branding to use for app
        type: choice
        required: true
        default: tamanu
        options:
          - tamanu
          - cambodia
      server:
        description: Central server to use
        type: string
        required: false

env:
  APK_PATH: ./packages/mobile/android/app/build/outputs/apk/release/app.apk
  APK_NAME: app.apk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Update branding app title
        if: ${{ inputs.branding == 'cambodia' }}
        working-directory: packages/mobile/android/app/src/main/res/values
        run: sed -i "s/Tamanu Mobile/KhmEIR/g" strings.xml

      - name: Set branding mipmap app icons
        working-directory: packages/mobile/android/app/src/main/res
        run: mv ${{inputs.branding}}/* .

      - name: Set server overrides
        if: ${{ inputs.server }}
        working-directory: packages/mobile
        run: |
          cat <<EOF > serverOverrides.json
          {
            "centralServers": [{"label": "Central Server", "value": "${{inputs.server}}" }]
          }
          EOF

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn

      - name: Run Yarn Install
        working-directory: packages/mobile
        run: |
          npm i -g corepack
          yarn install

      - name: Build application
        working-directory: packages/mobile/android
        run: ./gradlew assemble

      - name: Upload final build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ${{ env.APK_PATH }}
          retention-days: 1

      - name: Set S3 destination
        id: destination
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const base = 's3://bes-tamanu-release-clients';
            if (context.ref == 'refs/heads/main') {
              return `${base}/main/${(new Date).toISOString().replaceAll(':','-').split('.')[0]}.${context.sha.slice(0, 10)}`;
            } else if (context.ref.startsWith('refs/tags/v')) {
              return `${base}/${context.ref.replace('refs/tags/v', '')}`;
            } else if (context.ref.startsWith('refs/heads/release/')) {
              return `${base}/${context.ref.replace('refs/tags/', '')}-rc`;
            } else {
              return 'nowhere';
            }

      - name: Configure AWS Credentials (upload)
        if: steps.destination.outputs.result != 'nowhere'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-server-s3
          role-session-name: GHA@Tamanu=AndroidPackage

      - name: Push to S3
        if: steps.destination.outputs.result != 'nowhere'
        env:
          target: ${{ steps.destination.outputs.result }}
        run: aws s3 cp ${{APK_PATH}} $target/android/${{inputs.branding}}/${{env.APP_NAME}} --no-progress
