name: CD Package Android

permissions:
  contents: read
  id-token: write #Â OIDC token for AWS

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      branding:
        type: string
        required: false
        default: tamanu
      server:
        type: string
        required: false
      buildType:
        type: string
        required: false
        default: debug
  workflow_dispatch:
    inputs:
      branding:
        type: choice
        required: false
        default: tamanu
        options:
          - tamanu
          - cambodia
      server:
        description: Central server override
        type: string
        required: false
      buildType:
        description: Build type
        type: choice
        required: false
        default: debug
        options:
          - release
          - debug
env:
  APK_NAME: app.apk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Update branding app title
        if: ${{ inputs.branding != 'tamanu' }}
        env:
          appnames: '{"cambodia": "KhmEIR"}'
        working-directory: packages/mobile/android/app/src/main/res/values
        run: sed -i "s/Tamanu Mobile/${{fromjson(env.appnames)[inputs.branding]}}/g" strings.xml

      - name: Set branding mipmap app icons
        if: ${{ inputs.branding != 'tamanu' }}
        working-directory: packages/mobile/android/app/src/main/res
        run: |
          rm -rf mipmap-*
          mv ${{inputs.branding}}/* .

      - name: Set server overrides
        if: ${{ inputs.server }}
        working-directory: packages/mobile
        run: |
          cat <<EOF > serverOverrides.json
          {
            "centralServers": [{"label": "Central Server", "value": "${{inputs.server}}" }]
          }
          EOF

      - name: Make branding available to app
        working-directory: packages/mobile/android
        run: |
          echo "BRANDING=${{ inputs.branding }}" > .env

      - name: Restore keystore
        if: ${{ inputs.buildType == 'release' }}
        working-directory: packages/mobile/android/app
        env:
          keystore: ${{ secrets.ANDROID_KEYSTORE }}
        run: |
          base64 -d <<< "$keystore" > release.keystore


      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn

      - name: Run Yarn Install
        working-directory: packages/mobile
        run: |
          npm i -g corepack
          yarn install

      - name: Build release
        if: ${{ inputs.buildType == 'release' }}
        working-directory: packages/mobile/android
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run:  ./gradlew app:assembleRelease

      - name: Build debug
        if: ${{ inputs.buildType == 'debug' }}
        working-directory: packages/mobile/android
        run: ./gradlew app:assembleDebug

      - name: Upload final build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ./packages/mobile/android/app/build/outputs/apk/${{inputs.buildType}}/app-${{inputs.buildType}}.apk
          retention-days: 1

      - name: Set S3 destination
        id: destination
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            if (context.ref == 'refs/heads/main') {
              return `main/${(new Date).toISOString().replaceAll(':','-').split('.')[0]}.${context.sha.slice(0, 10)}`;
            } else if (context.ref.startsWith('refs/tags/v')) {
              return context.ref.replace('refs/tags/v', '');
            } else if (context.ref.startsWith('refs/heads/release/')) {
              return `${context.ref.replace('refs/tags/', '')}-rc`;
            } else {
              return 'nowhere';
            }

      - name: Configure AWS Credentials (upload)
        if: steps.destination.outputs.result != 'nowhere'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-server-s3
          role-session-name: GHA@Tamanu=AndroidPackage

      - name: Push to S3
        if: steps.destination.outputs.result != 'nowhere'
        env:
          target: ${{ steps.destination.outputs.result }}
        run: aws s3 cp ${{ env.APK_PATH }} s3://bes-tamanu-release-clients/$target/android/${{inputs.branding}}/${{env.APK_NAME}} --no-progress

      - if: steps.destination.outputs.result != 'nowhere' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          append_body: true
          body: |
            ## Mobile app ðŸ“±

            - [Android](https://clients.ops.tamanu.io/${{ steps.destination.outputs.result }})
