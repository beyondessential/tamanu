name: CD Web Package

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches:
      - main
      - release/*
    tags:
      - v*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write #Â OIDC token for AWS
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build web package
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: yarn
      - run: yarn
      - run: yarn build-shared
      - run: yarn workspace desktop build

      - name: Pre-compress assets
        working-directory: packages/desktop
        run: |
          set -exu
          for file in $(find . -iregex '[.](css|html|js|svg)$'); do
            zstd -f -T0 -19 -o $file.zst $file
            gzip -f -9 -k $file
            brotli -f -Z -k $file
          done

      - name: Pack web package
        working-directory: packages/desktop
        run: |
          set -exu
          ver=$(jq -r .version package.json)
          mv dist tamanu-web-$ver
          zip -r -0 tamanu-web-$ver.zip tamanu-web-$ver

      - name: Upload to artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-package
          path: packages/desktop/tamanu-web*.zip*
          retention-days: 14
          if-no-files-found: error

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-desktop-s3
          role-session-name: GHA@Tamanu=WebPackage
          mask-aws-account-id: false

      - name: Set S3 destination
        id: destination
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const base = 's3://bes-tamanu-desktop-servers';
            if (context.ref == 'refs/heads/main') {
              return `${base}/main/`;
            } else if (context.ref.startsWith('refs/tags/v')) {
              return `${base}/${context.ref.replace('refs/tags/', '')}/`;
            } else if (context.ref.startsWith('refs/heads/release/')) {
              return `${base}/${context.ref.replace('refs/tags/', '')}-rc/`;
            } else {
              return 'nowhere';
            }

      - name: Push to S3
        if: steps.destination.outputs.result != 'nowhere'
        working-directory: packages/desktop
        env:
          target: ${{ steps.destination.outputs.result }}
        run: |
          set -exu
          for file in *.zip*; do
            aws s3 cp $file $target/$file --no-progress
          done
