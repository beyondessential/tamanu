name: Container image

on:
  workflow_call:
    inputs:
      ref:
        description: Ref to checkout and build
        type: string
        required: false
        default: ${{ github.ref }}
      package-name:
        description: Name of the package to build
        type: string
        required: true
      package-path:
        description: Path to the package to build
        type: string
        required: true
      cache-key:
        description: Docker build cache key (per package)
        type: string
        required: false
        default: ${{ github.ref }} # note this is not necessarily the checked out ref
      image-shatag:
        description: Apply shatag to the image.
        type: boolean
        required: false
        default: true
      image-tags:
        description: List of tags to apply to the image.
        type: string
        required: false
      image-labels:
        description: List of labels to apply to the image.
        type: string
        required: false
    outputs:
      registry:
        description: ECR registry
        value: ${{ jobs.build.outputs.registry }}
      image:
        description: Image name (including registry)
        value: ${{ jobs.build.outputs.image }}
      tag:
        description: Tag(s) of the built image
        value: ${{ jobs.build.outputs.tag }}

permissions:
  contents: read
  id-token: write #Â OIDC token for AWS

jobs:
  build:
    name: Build ${{ inputs.package-name }}
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::143295493206:role/gha-image-push
          role-session-name: GHA@Tamanu=BuildImage
          mask-aws-account-id: false

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup buildkit
        uses: docker/setup-buildx-action@v2

      - name: Compute sha tag
        if: inputs.image-shatag
        uses: actions/github-script@v6
        id: shatag
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          INPUT_PACKAGE_NAME: ${{ inputs.package-name }}
        with:
          result-encoding: string
          script: |
            const { ECR_REGISTRY, INPUT_PACKAGE_NAME } = process.env;
            const sha = require('child_process').execSync('git log -n1 --format=%H').toString().trim();
            const name = `${ECR_REGISTRY}/tamanu/${INPUT_PACKAGE_NAME}`;
            return `${name}:sha-${sha}`;

      - name: Compute tags
        uses: actions/github-script@v6
        id: tags
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          INPUT_PACKAGE_NAME: ${{ inputs.package-name }}
          INPUT_TAGS: ${{ inputs.image-tags }}
        with:
          result-encoding: string
          script: |
            const { ECR_REGISTRY, INPUT_PACKAGE_NAME, INPUT_TAGS, GITHUB_ENV } = process.env;
            const name = `${ECR_REGISTRY}/tamanu/${INPUT_PACKAGE_NAME}`;
            return (INPUT_TAGS?.split(/\r?\n/) ?? []).map(tag => `${name}:${tag}`).join('\n');

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha,scope=${{ inputs.cache-key }}-${{ inputs.package-name }}
          cache-to: type=gha,mode=max,scope=${{ inputs.cache-key }}-${{ inputs.package-name }}
          build-args: PACKAGE_PATH=${{ inputs.package-path }}
          target: server
          push: true
          labels: |
            org.opencontainers.image.vendor=BES
            org.opencontainers.image.title=Tamanu ${{ inputs.package-name }}
            org.opencontainers.image.url=https://www.bes.au/products/tamanu/
            org.opencontainers.image.source=https://github.com/beyondessential/tamanu/
            org.opencontainers.image.revision=${{ github.sha }}
            ${{ inputs.image-labels }}
          tags: |
            ${{ steps.shatag.outputs.result }}
            ${{ steps.tags.outputs.result }}
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      image: ${{ steps.login-ecr.outputs.registry }}/tamanu/${{ inputs.package-name }}
      tag: ${{ steps.shatag.outputs.result || steps.tags.outputs.result }}
