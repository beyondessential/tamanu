---
version: 2
sources:
  - name: tamanu
    schema: public
    description: "{{ doc('generic__schema') }}"
    tables:
      - name: appointments
        description: "{{ doc('table__appointments') }}"
        config:
          tags:
            - clinical
        columns:
          - name: id
            data_type: character varying(255)
            description: "{{ doc('generic__id') }} in appointments."
            data_tests:
              - unique
              - not_null
          - name: created_at
            data_type: timestamp with time zone
            description: "{{ doc('generic__created_at') }} in appointments."
          - name: updated_at
            data_type: timestamp with time zone
            description: "{{ doc('generic__updated_at') }} in appointments."
          - name: deleted_at
            data_type: timestamp with time zone
            description: "{{ doc('generic__deleted_at') }} in appointments."
          - name: start_time
            data_type: character(19)
            description: "{{ doc('appointments__start_time') }}"
          - name: end_time
            data_type: character(19)
            description: "{{ doc('appointments__end_time') }}"
          - name: patient_id
            data_type: character varying(255)
            description: "{{ doc('appointments__patient_id') }}"
            data_tests:
              - relationships:
                  to: "source('tamanu', 'patients')"
                  field: id
          - name: clinician_id
            data_type: character varying(255)
            description: "{{ doc('appointments__clinician_id') }}"
            data_tests:
              - relationships:
                  to: "source('tamanu', 'users')"
                  field: id
          - name: location_id
            data_type: character varying(255)
            description: "{{ doc('appointments__location_id') }}"
            data_tests:
              - relationships:
                  to: "source('tamanu', 'locations')"
                  field: id
          - name: type_legacy
            data_type: character varying(255)
            description: "{{ doc('appointments__type_legacy') }}"
            data_tests:
              - not_null
          - name: status
            data_type: character varying(255)
            description: "{{ doc('appointments__status') }}"
            data_tests:
              - not_null
              - accepted_values:
                  values:
                    - Confirmed
                    - Arrived
                    - Assessed
                    - Seen
                    - No-show
                    - Cancelled
          - name: start_time_legacy
            data_type: timestamp with time zone
            description: "{{ doc('appointments__start_time_legacy') }}"
          - name: end_time_legacy
            data_type: timestamp with time zone
            description: "{{ doc('appointments__end_time_legacy') }}"
          - name: location_group_id
            data_type: character varying(255)
            description: "{{ doc('appointments__location_group_id') }}"
            data_tests:
              - relationships:
                  to: "source('tamanu', 'location_groups')"
                  field: id
          - name: updated_at_sync_tick
            data_type: bigint
            description: "{{ doc('generic__updated_at_sync_tick') }} in appointments."
            data_tests:
              - not_null
          - name: booking_type_id
            data_type: character varying(255)
            description: "{{ doc('appointments__booking_type_id') }}"
            data_tests:
              - dbt_utils.relationships_where:
                  to: "source('tamanu', 'reference_data')"
                  field: id
                  to_condition: "type = 'bookingType'"
          - name: appointment_type_id
            data_type: character varying(255)
            description: "{{ doc('appointments__appointment_type_id') }}"
            data_tests:
              - dbt_utils.relationships_where:
                  to: "source('tamanu', 'reference_data')"
                  field: id
                  to_condition: "type = 'appointmentType'"
          - name: is_high_priority
            data_type: boolean
            description: "{{ doc('appointments__is_high_priority') }}"
            data_tests:
              - not_null
          - name: encounter_id
            data_type: character varying(255)
            description: "{{ doc('appointments__encounter_id') }}"
          - name: schedule_id
            data_type: uuid
            description: "{{ doc('appointments__schedule_id') }}"