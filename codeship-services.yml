# not an actual service, just a place to put yaml templates
definitions:
  image: scratch
  _defs:
    app-base: &app-base
      cached: true
      default_cache_branch: dev
      encrypted_env_file: codeship.env.encrypted
      environment: &app-env
        ELECTRON_CONFIG_CACHE: "$HOME/cache/electron"

app-12-nodb: &app-12
  <<: *app-base
  volumes:
    - ./.tmp-12:/tamanu
    # app-12-nodb is used for building packages, so needs:
    - ./.ssh:/root/.ssh
  build:
    context: .
    dockerfile: Dockerfile
    # image name needs to be the same across all app-V- variants
    # otherwise the image busts its own cache and we lose the advantage
    image: tamanu-app-12
    args:
      node_version: 12.20.2

app-12-db:
  <<: *app-12
  environment:
    <<: *app-env
    NODE_CONFIG: '{"db":{"name":"tamanu-12","host":"postgres","username":"postgres","password":"postgres"}}'
  depends_on:
    - postgres

app-14-nodb: &app-14
  <<: *app-base
  volumes:
    - ./.tmp-14:/tamanu
  build:
    context: .
    dockerfile: Dockerfile
    # image name needs to be the same across all app-V- variants
    # otherwise the image busts its own cache and we lose the advantage
    image: tamanu-app-14
    args:
      node_version: 14.19.1

app-14-db:
  <<: *app-14
  environment:
    <<: *app-env
    NODE_CONFIG: '{"db":{"name":"tamanu-14","host":"postgres","username":"postgres","password":"postgres"}}'
  depends_on:
    - postgres

awsdeployment:
  build:
    image: tamanu-deploy
    dockerfile: Dockerfile.deploy
  encrypted_env_file: codeship.env.encrypted
  cached: true
  default_cache_branch: dev
  volumes:
    - ./.tmp-12:/tamanu
    - ./.ssh:/root/.ssh

postgres:
  build:
    image: tamanu-postgres
    context: .
    dockerfile: packages/shared-src/docker/postgres/Dockerfile
  cached: true
  default_cache_branch: dev
  environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - 'POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C'

mobile:
  build:
    image: tamanu-mobile
    context: packages/mobile
    dockerfile: Dockerfile
  encrypted_dockercfg_path: packages/mobile/dockercfg.encrypted
