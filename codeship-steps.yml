- name: All steps
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - name: copy_files
      service: app
      command: /.tmp/scripts/copy_files.sh
    - name: reinstate_ssh
      service: app
      command: ./scripts/fix_ssh.sh
    - name: install_dependencies
      service: app
      command: ./scripts/install.sh
    - name: build_shared
      service: app
      command: ./scripts/build_shared.sh
    - name: apply_and_revert_sync_server_migrations
      service: app
      command: ./scripts/apply_and_revert_sync_server_migrations.sh
    - name: test
      type: parallel
      steps:
        - name: app-test
          service: app
          command: ./scripts/test.sh
        - name: mobile-test
          service: mobile
          command: "yarn test:coverage"
    - name: build
      type: parallel
      steps:
        # the following steps are run in serial so they don't overlap
        - name: lan
          type: serial
          steps:
            - name: build_and_pack_lan_installer
              service: app
              tag: ^(master$|dev$|staging$|ci-)
              command: ./scripts/build_lan.sh
            - name: build_lan_release
              tag: ^(master$|dev$|staging$|ci-)
              service: app
              command: ./scripts/build_package_release.sh lan
        - name: build_and_pack_desktop_installer
          service: app
          tag: ^(master$|dev$|staging$|ci-)
          command: ./scripts/build_desktop.sh build-only
        - name: build_sync_release
          tag: ^(master$|dev$|staging$|ci-)
          service: app
          command: ./scripts/build_package_release.sh sync-server
        - name: build_meta_release
          tag: ^(master$|dev$|staging$|ci-)
          service: app
          command: ./scripts/build_package_release.sh meta-server
    - name: push_and_deploy
      type: parallel
      steps:
        - name: build_and_release_desktop_installer
          service: app
          tag: ^(release-desktop-)
          command: ./scripts/build_desktop.sh build-and-release
        - name: push_artefacts_to_s3
          service: awsdeployment
          tag: ^(master$|dev$|staging$|ci-)
          command: ./scripts/push.sh
        # the following serial steps are a fix for a bug where version names can
        # collide if an application is deployed in parallel
        # see https://github.com/codeship-library/aws-utilities/issues/115
        - name: deploy_sync
          type: serial
          steps:
            - name: deploy_sync_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh dev
            - name: deploy_sync_staging_environment
              tag: ^(staging$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh staging
            - name: deploy_sync_demo_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo
            - name: deploy_sync_demo_nauru_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-nauru
            - name: deploy_sync_demo_palau_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-palau
        - name: deploy_lan
          type: serial
          steps:
            - name: deploy_lan_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh dev
            - name: deploy_lan_staging_environment
              tag: ^(staging$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh staging
            - name: deploy_lan_demo_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo
            - name: deploy_lan_demo_nauru_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo-nauru
        - name: deploy_meta
          type: serial
          steps:
            - name: deploy_meta_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_meta.sh dev
            # meta production environment is deployed from dev so we can quickly add/remove features
            # TODO: revist whether this is a good idea at some later date
            - name: deploy_meta_prod_environment
              tag: ^(dev$)
              service: awsdeployment
              command: ./scripts/deploy_meta.sh prod
