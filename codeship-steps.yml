- name: All steps
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - name: prepare app
      type: parallel
      steps:
        - name: "node: 12"
          type: serial
          service: app-12-nodb
          steps: &prep-app
            - name: copy files
              command: /pre/scripts/copy_files.sh
            - name: install dependencies
              command: scripts/build_shared.sh
        - name: "node: 14"
          type: serial
          service: app-14-nodb
          steps: *prep-app

    - name: run tests
      type: serial
      steps:
        - name: test app
          type: parallel
          steps:
            - name: "node: 12"
              service: app-12-db
              type: serial
              steps: &test-app
                - name: run migrations
                  command: scripts/apply_and_revert_sync_server_migrations.sh
                - name: test
                  command: scripts/test.sh
            - name: "node: 14"
              service: app-14-db
              type: serial
              steps: *test-app

        - name: test mobile
          service: mobile
          command: "yarn test:coverage"

    - name: fix ssh for builds
      tag: ^(master$|dev$|staging$|ci-)
      service: app-12-nodb
      command: /pre/scripts/fix_ssh.sh
    - name: build packages
      tag: ^(master$|dev$|staging$|ci-)
      type: parallel
      steps:
        # the following steps are run in serial so they don't overlap
        - name: lan
          type: serial
          steps:
            - name: build_and_pack_lan_installer
              service: app-12-nodb
              tag: ^(master$|dev$|staging$|ci-)
              command: ./scripts/build_lan.sh
            - name: build_lan_release
              tag: ^(master$|dev$|staging$|ci-)
              service: app-12-nodb
              command: ./scripts/build_package_release.sh lan
        - name: build_and_pack_desktop_installer
          service: app-12-nodb
          tag: ^(master$|dev$|staging$|ci-)
          command: ./scripts/build_desktop.sh build-only
        - name: build_sync_release
          tag: ^(master$|dev$|staging$|ci-)
          service: app-12-nodb
          command: ./scripts/build_package_release.sh sync-server
        - name: build_meta_release
          tag: ^(master$|dev$|staging$|ci-)
          service: app-12-nodb
          command: ./scripts/build_package_release.sh meta-server
    - name: push and deploy
      tag: ^(master$|dev$|staging$|ci-|release-desktop-)
      type: parallel
      steps:
        - name: build_and_release_desktop_installer
          service: app-12-nodb
          tag: ^(release-desktop-)
          command: ./scripts/build_desktop.sh build-and-release
        - name: push_artefacts_to_s3
          service: awsdeployment
          tag: ^(master$|dev$|staging$|ci-)
          command: ./scripts/push.sh
        # the following serial steps are a fix for a bug where version names can
        # collide if an application is deployed in parallel
        # see https://github.com/codeship-library/aws-utilities/issues/115
        - name: deploy sync
          tag: ^(master$|dev$|staging$|ci-)
          type: serial
          steps:
            - name: deploy_sync_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh dev
            - name: deploy_sync_staging_environment
              tag: ^(staging$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh staging
            - name: deploy_sync_demo_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo
            - name: deploy_sync_demo_nauru_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-nauru
            - name: deploy_sync_demo_palau_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-palau
        - name: deploy lan
          tag: ^(master$|dev$|staging$|ci-)
          type: serial
          steps:
            - name: deploy_lan_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh dev
            - name: deploy_lan_staging_environment
              tag: ^(staging$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh staging
            - name: deploy_lan_demo_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo
            - name: deploy_lan_demo_nauru_environment
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo-nauru
        - name: deploy meta
          tag: ^(dev$|ci-)
          type: serial
          steps:
            - name: deploy_meta_dev_environment
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_meta.sh dev
            # meta production environment is deployed from dev so we can quickly add/remove features
            # TODO: revist whether this is a good idea at some later date
            - name: deploy_meta_prod_environment
              tag: ^(dev$)
              service: awsdeployment
              command: ./scripts/deploy_meta.sh prod
